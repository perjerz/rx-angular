{"version":3,"sources":["./src/app/shared/utils/to-array.pipe.ts","./src/app/shared/utils/utils.module.ts","./src/app/features/integrations/dynamic-counter/rx-state-and-reactive-forms/rx-state-and-reactive-forms.routes.ts","./src/app/features/integrations/dynamic-counter/rx-state-and-reactive-forms/rx-state-and-reactive-forms.component.ts","./src/app/features/integrations/dynamic-counter/rx-state-and-reactive-forms/rx-state-and-reactive-forms.module.ts"],"names":[],"mappings":"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","file":"rx-state-and-reactive-forms-rx-state-and-reactive-forms-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Routes } from '@angular/router';\nimport { RxStateAndReactiveFormsCounterComponent } from './rx-state-and-reactive-forms.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: RxStateAndReactiveFormsCounterComponent\n  }\n];\n","import { EMPTY, Observable, Subject, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { RxState, selectSlice } from '@rx-angular/state';\nimport { CounterState, INITIAL_STATE } from '../shared/model';\nimport { toLatestFrom } from '../../../../shared/utils/to-latest-from';\nimport { updateCount } from '../shared/utils';\n\n@Component({\n  selector: 'rxa-dynamic-counter-and-forms',\n  template: `\n    <h1>RxState + ReactiveForms</h1>\n    <form [formGroup]=\"counterForm\" class=\"counter\">\n\n      <rxa-counter-display [count$]=\"count$\"></rxa-counter-display>\n\n      <button\n        (click)=\"updateTicking.next({ isTicking: true })\"\n        mat-raised-button>\n        Start\n      </button>\n\n      <button\n        (click)=\"updateTicking.next({ isTicking: false })\"\n        mat-raised-button>\n        Pause\n      </button>\n\n      <button\n        (click)=\"reset()\"\n        mat-raised-button>\n        Reset\n      </button>\n\n      <br/>\n\n      <button\n        (click)=\"btnSetTo.next()\"\n        mat-raised-button>\n        Set To\n      </button>\n\n      <mat-form-field>\n        <label>Count</label>\n        <input type=\"number\" min=\"0\" matInput [formControlName]=\"'count'\"/>\n      </mat-form-field>\n      <br/>\n\n      <button\n        (click)=\"updateCountUp.next({ countUp: true })\"\n        mat-raised-button>\n        Count Up\n      </button>\n\n      <button\n        (click)=\"updateCountUp.next({ countUp: false })\"\n        mat-raised-button>\n        Count Down\n      </button>\n\n      <br/>\n\n      <mat-form-field>\n        <label>Tick Speed</label>\n        <input type=\"number\" min=\"0\" matInput [formControlName]=\"'tickSpeed'\"/>\n      </mat-form-field>\n\n      <mat-form-field>\n        <label>CountDiff</label>\n        <input type=\"number\" min=\"0\" matInput [formControlName]=\"'countDiff'\"/>\n      </mat-form-field>\n\n    </form>\n  `,\n  providers: [RxState]\n})\nexport class RxStateAndReactiveFormsCounterComponent {\n  readonly initialCounterState = INITIAL_STATE;\n  readonly counterForm = this.fb.group({\n    tickSpeed: [],\n    count: [],\n    countDiff: []\n  });\n\n  readonly updateTicking = new Subject<{ isTicking: boolean }>();\n  readonly updateCountUp = new Subject<{ countUp: boolean }>();\n  readonly btnSetTo: Subject<Event> = new Subject<Event>();\n\n  readonly count$: Observable<string> = this.$.select(map(s => s.count + ''));\n\n  constructor(\n    private fb: FormBuilder,\n    private $: RxState<CounterState>\n  ) {\n    this.reset();\n\n    this.$.connect(this.updateTicking);\n    this.$.connect(this.updateCountUp);\n    this.$.connect(this.counterForm.valueChanges\n      .pipe(selectSlice(['tickSpeed', 'countDiff'])));\n    this.$.connect(\n      this.btnSetTo.pipe(\n        toLatestFrom(this.counterForm.valueChanges\n          .pipe(selectSlice(['count'])), { count: this.counterForm.value.count })\n      )\n    );\n\n    const updateCountTrigger$ = this.$.select(\n      selectSlice(['isTicking', 'tickSpeed']),\n      switchMap(s => (s.isTicking ? timer(0, s.tickSpeed) : EMPTY))\n    );\n    this.$.connect('count', updateCountTrigger$, updateCount);\n  }\n\n  reset() {\n    const { tickSpeed, countDiff, count, ...ignore } = this.initialCounterState;\n    this.$.set(this.initialCounterState);\n    this.counterForm.patchValue({ tickSpeed, countDiff, count });\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-state-and-reactive-forms.routes';\nimport { RxStateAndReactiveFormsCounterComponent } from './rx-state-and-reactive-forms.component';\nimport { SharedModule } from '../shared/shared.module';\n\nconst DECLARATIONS = [RxStateAndReactiveFormsCounterComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ROUTES)\n  ]\n})\nexport class RxStateAndReactiveFormsModule {\n}\n"],"sourceRoot":"webpack:///"}