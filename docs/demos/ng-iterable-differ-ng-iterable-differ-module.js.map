{"version":3,"sources":["./src/app/shared/debug-helper/value-provider/value/value.module.ts","./src/app/shared/utils/to-array.pipe.ts","./src/app/features/experiments/differ/ng-iterable-differ/ng-iterable-differ.module.ts","./src/app/features/experiments/differ/shared/log-iterable.ts","./src/app/shared/utils/utils.module.ts","./src/app/features/experiments/differ/shared/from-for.ts","./src/app/shared/debug-helper/value-provider/value/value.component.ts","./src/app/features/experiments/differ/ng-iterable-differ/ng-iterable-differ.routes.ts","./src/app/shared/debug-helper/work/index.ts","./src/app/features/experiments/differ/ng-iterable-differ/ng-iterable-differ/ng-iterable-differ.component.ts"],"names":[],"mappings":"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","file":"ng-iterable-differ-ng-iterable-differ-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { DirtyChecksModule } from '../../dirty-checks';\nimport { ValueComponent } from './value.component';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LetModule, PushModule } from '@rx-angular/template';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst DEPRECATIONS = [ValueComponent];\n\n@NgModule({\n  declarations: [...DEPRECATIONS],\n    imports: [\n        CommonModule,\n        MatRippleModule,\n        PushModule,\n        UtilsModule,\n        LetModule,\n        MatIconModule,\n        DirtyChecksModule\n    ],\n  exports: [...DEPRECATIONS]\n})\nexport class ValueModule {\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TemplateModule } from '@rx-angular/template';\nimport { ROUTES } from './ng-iterable-differ.routes';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer/visualizer.module';\nimport { NgIterableDifferComponent } from './ng-iterable-differ/ng-iterable-differ.component';\nimport { ValueProvidersModule } from '../../../../shared/debug-helper/value-provider';\nimport { ValueModule } from '../../../../shared/debug-helper/work';\n\nconst DECLARATIONS = [NgIterableDifferComponent];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    TemplateModule,\n    DirtyChecksModule,\n    MatButtonModule,\n    VisualizerModule,\n    ValueProvidersModule,\n    ValueModule\n  ]\n})\nexport class NgIterableDifferModule {\n}\n","import { IterableChanges } from '@angular/core';\nimport { diffByIndex, diffByKey } from './rx-differ';\n\nexport function logIterable<T>(newData: IterableChanges<T>) {\n  console.log('#################################');\n  if (newData === null) {\n    console.log('null change');\n  } else {\n    console.log('enter');\n    newData.forEachAddedItem(console.log);\n    console.log('move');\n    newData.forEachMovedItem(console.log);\n    console.log('remove');\n    newData.forEachRemovedItem(console.log);\n    console.log('identityChange');\n    newData.forEachIdentityChange(console.log);\n  }\n}\n\nexport function logRxIterable<T>(indexDifferResult) {\n  console.log('##diffByIndex');\n  console.log('enter', indexDifferResult.enter);\n  console.log('update', indexDifferResult.update);\n  console.log('exit', indexDifferResult.exit);\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Observable } from 'rxjs';\nimport { IterableChanges } from '@angular/core';\n\nexport function fromFor<T>(fn: string) {\n  return (o$: Observable<IterableChanges<T>>) => new Observable<T[]>((s) => {\n    const subscription = o$.subscribe(n => {\n      const a: T[] = [];\n      // tslint:disable-next-line:no-unused-expression\n      if(n != null) {\n        n[fn](v => a.push(v.item));\n        s.next(a);\n      } else {\n        s.next([])\n      }\n    });\n    return subscription.unsubscribe;\n  });\n}\n","// tslint:disable:no-unused-expression\n\nimport { Component, Input } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\nimport { toBoolean } from '../utils';\nimport { TestItem } from '../model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-value',\n  template: `\n    <mat-icon class=\"item\" [ngClass]=\"{red:!v, green:v}\" *rxLet=\"value$; let v\">{{v ? 'check' : 'highlight_off'}}</mat-icon>`,\n  styles: [`\n    .item.red {\n      color: red;\n    }\n    .item.green {\n      color: green;\n    }\n    .value.number {\n    }\n    .value.string {\n    }\n    .value.object {\n    }\n    .value.array {\n    }\n  `],\n  providers: [RxState]\n})\nexport class ValueComponent {\n  value$ = this.state.select(map(s => toBoolean(s.item.value, 0.5)));\n\n  @Input()\n  set value(o: Observable<TestItem> | TestItem) {\n    this.state.connect('item', isObservable(o) ? o : of(o));\n  }\n\n\n  constructor(public state: RxState<{ item: TestItem }>) {\n\n  }\n\n}\n","import { NgIterableDifferComponent } from './ng-iterable-differ/ng-iterable-differ.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: NgIterableDifferComponent\n  }\n];\n\n","export {ValueModule} from '../value-provider/value/value.module';\nexport {ValueComponent} from '../value-provider/value/value.component';\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component, IterableDiffer,\n  IterableDiffers,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { environment } from '../../../../../../environments/environment';\nimport { ArrayProviderService } from '../../../../../shared/debug-helper/value-provider';\nimport { RxState } from '@rx-angular/state';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Hooks } from '../../../../../shared/debug-helper/hooks';\nimport { fromFor } from '../../shared/from-for';\nimport { logIterable } from '../../shared/log-iterable';\n\n@Component({\n  selector: 'rxa-differ-ng-iterable-differ',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader class=\"row\">\n        <div class=\"col-sm-12\">\n          <h2>Angular Iterable Differ</h2>\n          <rxa-array-provider [buttons]=\"true\" [unpatched]=\"[]\" #arrayP=\"rxaArrayProvider\"></rxa-array-provider>\n        </div>\n      </div>\n      <div class=\"w-100 row\">\n        <div class=\"col-sm-2\">\n          <h3>List</h3>\n          <div *ngFor=\"let enterRes of arrayP.array$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Enter</h3>\n          <div *ngFor=\"let enterRes of enter$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Move</h3>\n          <div *ngFor=\"let enterRes of move$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Identity Change</h3>\n          <div *ngFor=\"let enterRes of identityChange$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Exit</h3>\n          <div *ngFor=\"let enterRes of exit$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: environment.changeDetection,\n  encapsulation: ViewEncapsulation.None,\n  providers: [ArrayProviderService, RxState]\n})\nexport class NgIterableDifferComponent<T> extends Hooks implements AfterViewInit {\n  ngDiffer: IterableDiffer<T>;\n\n  @ViewChild('arrayP')\n  arrayP;\n\n  ngDifferResult$;\n  enter$;\n  move$;\n  identityChange$;\n  exit$;\n\n  constructor(\n    public cdRef: ChangeDetectorRef,\n    public state: RxState<any>,\n    private iterableDiffers: IterableDiffers) {\n    super();\n\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.setupNgDiffer();\n  }\n\n  private setupNgDiffer() {\n    this.ngDiffer = this.iterableDiffers.find([]).create((idx, item) => this.trackByIdFn(item));\n\n    this.ngDifferResult$ = this.arrayP.array$.pipe(\n      // @ts-ignore\n      map(newData => this.ngDiffer.diff(newData)),\n      shareReplay(1)\n    );\n    this.enter$ = this.ngDifferResult$.pipe(fromFor('forEachAddedItem'));\n    this.move$ = this.ngDifferResult$.pipe(fromFor('forEachMovedItem'));\n    this.identityChange$ = this.ngDifferResult$.pipe(fromFor('forEachIdentityChange'));\n    this.exit$ = this.ngDifferResult$.pipe(fromFor('forEachRemovedItem'));\n\n    this.state.hold(this.ngDifferResult$, logIterable);\n    this.cdRef.detectChanges();\n  }\n\n  trackByIdFn = (a) => a.id;\n\n}\n"],"sourceRoot":"webpack:///"}