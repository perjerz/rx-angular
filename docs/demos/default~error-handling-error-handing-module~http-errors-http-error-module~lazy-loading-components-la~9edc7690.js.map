{"version":3,"sources":["/home/runner/work/rx-angular/rx-angular/node_modules/perf-marks/dist/es2015/marks.js","/home/runner/work/rx-angular/rx-angular/node_modules/ngx-skeleton-loader/__ivy_ngcc__/fesm2015/ngx-skeleton-loader.js","/home/runner/work/rx-angular/rx-angular/node_modules/perf-marks/dist/es2015/is-nodejs-env.js","/home/runner/work/rx-angular/rx-angular/node_modules/perf-marks/dist/es2015/user-timing-api-resolver.js","/home/runner/work/rx-angular/rx-angular/node_modules/perf-marks/dist/es2015/is-performance-observable-supported.js","(webpack)/buildin/harmony-module.js","/home/runner/work/rx-angular/rx-angular/node_modules/perf-marks/dist/es2015/entrypoints/marks.js","/home/runner/work/rx-angular/rx-angular/node_modules/perf-marks/dist/es2015/is-user-timing-api-supported.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACe;AAC3C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sFAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sFAAwB;AACjC;AACA;AACA;AACA,SAAS,0DAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sFAAwB;AAChC,YAAY,0DAAW,IAAI,qGAAgC;AAC3D;AACA;AACA;AACA;AACA,aAAa;AACb,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sFAAwB;AACrC;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA,wEAAwE,SAAS;AACjF,YAAY,0DAAW;AACvB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sFAAwB;AACjC;AACA;AACA;AACA,SAAS,0DAAW;AACpB;AACA;AACA;AACA;AACmG;;;;;;;;;;;;;ACnInG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACxB;AACC;;AAE/C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACE;;AAE1C,uCAAuC,SAAS,4DAA4D;AAC5G,8DAA8D;AAC9D,IAAI,uDAAgB;AACpB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,CAAC;AACD;AACA;AACA;AACA;AACA;A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","file":"default~error-handling-error-handing-module~http-errors-http-error-module~lazy-loading-components-la~9edc7690.js","sourcesContent":["import { isUserTimingAPISupported } from './is-user-timing-api-supported';\nimport { isPerformanceObservableSupported } from './is-performance-observable-supported';\nimport { isNodeJSEnv } from './is-nodejs-env';\n// Map() is not used in order to decrease the bundle\nlet marksMap = {};\nlet marksObserver = {};\n/**\n * Get the current time based on User Timing API or Date\n *\n * @returns number\n *\n */\nconst getTimeNow = () => {\n    if (isUserTimingAPISupported) {\n        return performance.now();\n    }\n    return Date.now();\n};\n/**\n * Clear marks and measure of performance event\n *\n * @param markName - Performance marker to be checked\n *\n * @returns void\n *\n */\nconst clear = (markName) => {\n    marksMap[markName] = undefined;\n    // Removes PerformanceObserver references from memory\n    if (!!marksObserver[markName]) {\n        marksObserver[markName] = undefined;\n    }\n    if (!isUserTimingAPISupported) {\n        return;\n    }\n    // Some versions of NodeJS doesn't support this method\n    if (!isNodeJSEnv) {\n        performance.clearMeasures(markName);\n    }\n    performance.clearMarks(markName);\n};\n/**\n * Start performance measure of event\n *\n * @param markName - Performance marker to be started\n *\n * @returns number\n *\n */\nconst start = (markName) => {\n    if (isUserTimingAPISupported) {\n        if (isNodeJSEnv && isPerformanceObservableSupported) {\n            // eslint-disable-next-line compat/compat\n            const obs = new PerformanceObserver(list => {\n                marksObserver[markName] = list.getEntries().find(f => f.name === markName);\n                obs.disconnect();\n            });\n            obs.observe({ entryTypes: ['measure'] });\n        }\n        performance.mark(markName);\n    }\n    marksMap[markName] = getTimeNow();\n};\n/**\n * Finishes performance measure of event and\n * clear marks and measure if applicable\n *\n * @param markName - Performance marker to be checked\n * @param markNameToCompare - Optional mark to compare to\n *\n * @returns PerfMarksPerformanceEntry\n *\n */\nconst end = (markName, markNameToCompare) => {\n    try {\n        const startTime = marksMap[markName];\n        if (!isUserTimingAPISupported) {\n            return startTime\n                ? { duration: getTimeNow() - startTime, startTime, entryType: 'measure', name: markName }\n                : {};\n        }\n        // If there's no User Timing mark to be compared with,\n        // the package will create one to be used for better comparison\n        if (!markNameToCompare) {\n            performance.mark(`${markName}-end`);\n        }\n        performance.measure(markName, markName, markNameToCompare || `${markName}-end`);\n        if (isNodeJSEnv) {\n            if (!!marksObserver[markName]) {\n                return marksObserver[markName];\n            }\n            return startTime\n                ? { duration: getTimeNow() - startTime, startTime, entryType: 'measure', name: markName }\n                : {};\n        }\n        const entry = performance.getEntriesByName(markName).pop();\n        return entry || {};\n    }\n    catch (e) {\n        // If previous mark was missing for some reason, this will throw.\n        // This could only happen if something in event loop crashed\n        // in an unexpected place earlier.\n        // Don't pile on with more errors.\n        return {};\n    }\n    finally {\n        // Clear marks immediately to avoid growing buffer.\n        clear(markName);\n        // Clear marks used for comparison in case of it's value was passed\n        // If the mark to compare is not passed, it should remove the one we create with `-end` suffix\n        clear(markNameToCompare || `${markName}-end`);\n    }\n};\n/**\n * Clear all marks and measures of performance event\n *\n * @returns void\n *\n */\nconst clearAll = () => {\n    marksMap = {};\n    marksObserver = {};\n    if (!isUserTimingAPISupported) {\n        return;\n    }\n    // Some versions of NodeJS doesn't support this method\n    if (!isNodeJSEnv) {\n        performance.clearMeasures();\n    }\n    performance.clearMarks();\n};\nexport { start, end, clear, clearAll, isUserTimingAPISupported, isPerformanceObservableSupported };\n","import { isDevMode, Component, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-skeleton-loader.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = function (a0, a1, a2, a3) { return { circle: a0, progress: a1, \"progress-dark\": a2, pulse: a3 }; };\nfunction NgxSkeletonLoaderComponent_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 1);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(2, _c0, ctx_r0.appearance === \"circle\", ctx_r0.animation === \"progress\", ctx_r0.animation === \"progress-dark\", ctx_r0.animation === \"pulse\"))(\"ngStyle\", ctx_r0.theme);\n} }\nclass NgxSkeletonLoaderComponent {\n    constructor() {\n        this.count = 1;\n        this.appearance = '';\n        this.animation = 'progress';\n        this.theme = {};\n        this.items = [];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        start('NgxSkeletonLoader:Rendered');\n        start('NgxSkeletonLoader:Loaded');\n        this.items.length = this.count;\n        /** @type {?} */\n        const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n        if (allowedAnimations.indexOf(this.animation) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n            }\n            this.animation = 'progress';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        end('NgxSkeletonLoader:Rendered');\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        end('NgxSkeletonLoader:Loaded');\n    }\n}\nNgxSkeletonLoaderComponent.ɵfac = function NgxSkeletonLoaderComponent_Factory(t) { return new (t || NgxSkeletonLoaderComponent)(); };\nNgxSkeletonLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxSkeletonLoaderComponent, selectors: [[\"ngx-skeleton-loader\"]], inputs: { count: \"count\", appearance: \"appearance\", animation: \"animation\", theme: \"theme\" }, decls: 1, vars: 1, consts: [[\"class\", \"loader\", \"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"aria-valuetext\", \"Loading...\", \"role\", \"progressbar\", \"tabindex\", \"0\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"aria-valuetext\", \"Loading...\", \"role\", \"progressbar\", \"tabindex\", \"0\", 1, \"loader\", 3, \"ngClass\", \"ngStyle\"]], template: function NgxSkeletonLoaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgxSkeletonLoaderComponent_span_0_Template, 1, 7, \"span\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgStyle], styles: [\".loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:no-repeat #eff1f6;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader[_ngcontent-%COMP%]:after, .loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%]{-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite progress;animation:2s cubic-bezier(.4,0,.2,1) infinite progress;background-size:200px 100%}.loader.progress[_ngcontent-%COMP%]{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark[_ngcontent-%COMP%]{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse[_ngcontent-%COMP%]{-webkit-animation:1.5s cubic-bezier(.4,0,.2,1) infinite pulse;animation:1.5s cubic-bezier(.4,0,.2,1) infinite pulse;-webkit-animation-delay:.5s;animation-delay:.5s}@media (prefers-reduced-motion:reduce){.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%], .loader.pulse[_ngcontent-%COMP%]{-webkit-animation:none;animation:none}.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%]{background-image:none}}@-webkit-keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@-webkit-keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}@keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}\"] });\nNgxSkeletonLoaderComponent.propDecorators = {\n    count: [{ type: Input }],\n    appearance: [{ type: Input }],\n    animation: [{ type: Input }],\n    theme: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxSkeletonLoaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-skeleton-loader',\n                template: \"<span\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"loader\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  aria-valuetext=\\\"Loading...\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n    circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n</span>\\n\",\n                styles: [\".loader{box-sizing:border-box;overflow:hidden;position:relative;background:no-repeat #eff1f6;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader:after,.loader:before{box-sizing:border-box}.loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress,.loader.progress-dark{-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite progress;animation:2s cubic-bezier(.4,0,.2,1) infinite progress;background-size:200px 100%}.loader.progress{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse{-webkit-animation:1.5s cubic-bezier(.4,0,.2,1) infinite pulse;animation:1.5s cubic-bezier(.4,0,.2,1) infinite pulse;-webkit-animation-delay:.5s;animation-delay:.5s}@media (prefers-reduced-motion:reduce){.loader.progress,.loader.progress-dark,.loader.pulse{-webkit-animation:none;animation:none}.loader.progress,.loader.progress-dark{background-image:none}}@-webkit-keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@-webkit-keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}@keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}\"]\n            }]\n    }], function () { return []; }, { count: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], animation: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NgxSkeletonLoaderComponent.prototype.count;\n    /** @type {?} */\n    NgxSkeletonLoaderComponent.prototype.appearance;\n    /** @type {?} */\n    NgxSkeletonLoaderComponent.prototype.animation;\n    /** @type {?} */\n    NgxSkeletonLoaderComponent.prototype.theme;\n    /** @type {?} */\n    NgxSkeletonLoaderComponent.prototype.items;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-skeleton-loader.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxSkeletonLoaderModule {\n}\nNgxSkeletonLoaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxSkeletonLoaderModule });\nNgxSkeletonLoaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxSkeletonLoaderModule_Factory(t) { return new (t || NgxSkeletonLoaderModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSkeletonLoaderModule, { declarations: function () { return [NgxSkeletonLoaderComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxSkeletonLoaderComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxSkeletonLoaderModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxSkeletonLoaderComponent],\n                imports: [CommonModule],\n                exports: [NgxSkeletonLoaderComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-skeleton-loader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n\n//# sourceMappingURL=ngx-skeleton-loader.js.map","/**\n * Boolean with the result of the check if package\n * is running on the browser or in a NodeJS environment\n *\n * @returns boolean\n *\n */\nconst isNodeJSEnv = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n// Interesting fact:\n// Some bundlers are resolving `process`, so it needs to check for process.release.name\n// since it's a NodeJS only environment value.\n// More details in https://nodejs.org/api/process.html#process_process_release\nexport { isNodeJSEnv };\n","import { isNodeJSEnv } from './is-nodejs-env';\nif (isNodeJSEnv &&\n    !global.PerformanceObserver &&\n    !global.performance &&\n    module &&\n    typeof module.require === 'function') {\n    /**\n     * Requires a module which is protected against bundler minification.\n     *\n     * @param pkg The module path to resolve\n     */\n    const dynamicRequire = (mod, pkg) => {\n        return mod.require(pkg);\n    };\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const { PerformanceObserver, performance } = dynamicRequire(module, 'perf_hooks');\n        global.PerformanceObserver = PerformanceObserver;\n        global.performance = performance;\n    }\n    catch (error) {\n        throw new Error(`Your NodeJS application doesn't support 'perf_hooks'. ${error}`);\n    }\n}\n","/**\n * Boolean with the result of the check if PerformanceObservable\n * is supported for the current browser/NodeJS version\n *\n * @returns boolean\n *\n */\nconst isPerformanceObservableSupported = typeof PerformanceObserver !== 'undefined' &&\n    // eslint-disable-next-line compat/compat\n    typeof PerformanceObserver.prototype !== 'undefined' &&\n    // eslint-disable-next-line compat/compat\n    typeof PerformanceObserver.prototype.constructor === 'function';\nexport { isPerformanceObservableSupported };\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import '../user-timing-api-resolver';\nexport * from '../marks';\n","/**\n * Boolean with the result of the check if User Timing API\n * is supported for the current browser/NodeJS version\n *\n * @returns boolean\n *\n */\nconst isUserTimingAPISupported = typeof performance !== 'undefined' &&\n    typeof performance.now !== 'undefined' &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function' &&\n    (typeof performance.clearMarks === 'function' || typeof performance.clearMeasures === 'function');\nexport { isUserTimingAPISupported };\n"],"sourceRoot":"webpack:///"}