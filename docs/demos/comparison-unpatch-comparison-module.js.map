{"version":3,"sources":["./src/app/features/template/unpatch/comparison/comparison-unpatch.component.ts","./src/app/features/template/unpatch/comparison/unpatch-comparison.module.ts","./src/app/features/template/unpatch/comparison/runOutsideZone.directive.ts","./src/app/features/template/unpatch/comparison/comparison.routes.ts"],"names":[],"mappings":"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","file":"comparison-unpatch-comparison-module.js","sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-demo-basics',\n  template: `\n    <rxa-dirty-check></rxa-dirty-check>\n\n    ---\n\n    <button mat-raised-button (click)=\"nativeAngular()\">Native Angular</button>\n    <br/>\n    <button mat-raised-button [runOutsideZone] (click)=\"runOutSideAngular()\">\n      Zone Run Outside Angular\n    </button>\n    <br/>\n    <button mat-raised-button [unpatch] (click)=\"unpatch()\">Rx-Angular Unpatch</button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComparisonUnpatchComponent {\n\n  nativeAngular() {\n    console.log('nativeAngular');\n  }\n\n  runOutSideAngular() {\n    console.log('runOutSideAngular');\n  }\n\n  unpatch() {\n    console.log('unpatch');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { ComparisonUnpatchComponent } from './comparison-unpatch.component';\nimport { ROUTES } from './comparison.routes';\nimport { RunOutsideZoneDirective } from './runOutsideZone.directive';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { MatButtonModule } from '@angular/material/button';\n\nconst DECLARATIONS = [ComparisonUnpatchComponent, RunOutsideZoneDirective];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    RouterModule.forChild(ROUTES),\n    UnpatchEventsModule,\n    DirtyChecksModule\n  ],\n  exports: [DECLARATIONS]\n})\nexport class UnpatchComparisonModule {\n}\n","import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { getZoneUnPatchedApi } from '@rx-angular/template';\n\n// tslint:disable-next-line:directive-selector\n@Directive({ selector: '[runOutsideZone]' })\nexport class RunOutsideZoneDirective implements AfterViewInit, OnDestroy {\n  subscription = new Subscription();\n  events$ = new BehaviorSubject<string[]>(['click']);\n\n  @Input('runOutsideZone')\n  set events(value: string[]) {\n    if (value && value.length > 0) {\n      this.events$.next(value);\n    } else {\n      this.events$.next(['click']);\n    }\n  }\n\n  reapplyEventListenersZoneUnPatched(events) {\n    events.forEach(ev => {\n      this.unpatchEventListener(this.el.nativeElement, ev);\n    });\n  }\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = this.events$\n      .pipe(\n        tap(eventList => this.reapplyEventListenersZoneUnPatched(eventList))\n      )\n      .subscribe();\n  }\n\n  unpatchEventListener(elem: HTMLElement, event: string): void {\n    const eventListeners = (elem as any).eventListeners(event);\n    // Return if no event listeners are present\n    if (!eventListeners) {\n      return;\n    }\n\n    const addEventListener = getZoneUnPatchedApi('addEventListener', elem).bind(\n      elem\n    );\n    eventListeners.forEach(listener => {\n      // Remove and reapply listeners with patched API\n      elem.removeEventListener(event, listener);\n      // Reapply listeners with un-patched API\n      this.ngZone.runOutsideAngular(() => {\n        elem.addEventListener(event, listener);\n      });\n    });\n  }\n}\n","import { Routes } from '@angular/router';\nimport { ComparisonUnpatchComponent } from './comparison-unpatch.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: ComparisonUnpatchComponent\n  }\n];\n"],"sourceRoot":"webpack:///"}