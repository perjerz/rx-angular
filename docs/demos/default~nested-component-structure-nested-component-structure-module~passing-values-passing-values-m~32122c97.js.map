{"version":3,"sources":["./src/app/features/experiments/structural-directives/view-vs-embedded-view/poc1-let.directive.ts","./src/app/features/experiments/structural-directives/view-vs-embedded-view/original-let.directive.ts","./src/app/features/experiments/structural-directives/view-vs-embedded-view/view-vs-embedded-view.module.ts","./src/app/features/experiments/structural-directives/view-vs-embedded-view/view-vs-embedded-view.component.ts"],"names":[],"mappings":"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","file":"default~nested-component-structure-nested-component-structure-module~passing-values-passing-values-m~32122c97.js","sourcesContent":["import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, switchAll } from 'rxjs/operators';\n\nexport interface PocLetViewContext<T> {\n  // to enable `as` syntax we have to assign the directives selector (var as v)\n  pocLet: T;\n  $implicit: T,\n  $error: false | Error,\n  $complete: boolean,\n  $suspense: boolean\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc1Let]'\n})\nexport class Poc1LetDirective<U> implements OnInit, OnDestroy {\n  observables$ = new ReplaySubject(1);\n  viewContext = { $implicit: undefined};\n  embeddedView;\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  @Input()\n  set poc1Let(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  private subscription: Unsubscribable = new Subscription();\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly nextTemplateRef: TemplateRef<PocLetViewContext<U>>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.embeddedView = this.viewContainerRef.createEmbeddedView(\n      this.nextTemplateRef,\n      this.viewContext\n    );\n\n    this.subscription = this.values$\n      .subscribe(\n        v => {\n          this.viewContext.$implicit = v;\n          this.embeddedView.detectChanges()\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.embeddedView.destroy();\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, switchAll } from 'rxjs/operators';\n\nexport interface PocLetViewContext<T> {\n  // to enable `as` syntax we have to assign the directives selector (var as v)\n  pocLet: T;\n  $implicit: T,\n  $error: false | Error,\n  $complete: boolean,\n  $suspense: boolean\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[oLet]'\n})\nexport class OriginalLetDirective<U> implements OnInit, OnDestroy {\n  observables$ = new ReplaySubject(1);\n  viewContext = { $implicit: undefined};\n  embeddedView;\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  @Input()\n  set oLet(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  private subscription: Unsubscribable = new Subscription();\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly nextTemplateRef: TemplateRef<PocLetViewContext<U>>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.embeddedView = this.viewContainerRef.createEmbeddedView(\n      this.nextTemplateRef,\n      this.viewContext\n    );\n\n    this.subscription = this.values$\n      .subscribe(\n        v => {\n          this.viewContext.$implicit = v;\n          this.cdRef.detectChanges()\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.embeddedView.destroy();\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { OriginalLetDirective } from './original-let.directive';\nimport { Poc1LetDirective } from './poc1-let.directive';\nimport { ROUTES } from './view-vs-embedded-view.routes';\nimport { ViewVsEmbeddedViewComponent } from './view-vs-embedded-view.component';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    OriginalLetDirective,\n    Poc1LetDirective,\n    ViewVsEmbeddedViewComponent\n  ],\n  exports: [\n    Poc1LetDirective\n  ],\n  imports: [\n    CommonModule,\n    VisualizerModule,\n    UnpatchEventsModule,\n    MatButtonModule\n  ]\n})\nexport class ViewVsEmbeddedViewModule {\n}\n","import { Component } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { Subject } from 'rxjs';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-cd-embedded-view-parent01',\n  template: `\n    <rxa-visualizer>\n      <ng-container visualizerHeader>\n        <h2>\n          Component Template vs Embedded View\n        </h2>\n        <div>\n\n          <button mat-raised-button [unpatch] (click)=\"btn2Click$.next($event)\">\n            Directive cdRef#detectChanges\n          </button>\n          <button mat-raised-button [unpatch] (click)=\"btn1Click$.next($event)\">\n            EmbeddedView cdRef#detectChanges\n          </button>\n\n        </div>\n      </ng-container>\n    </rxa-visualizer>\n\n    <div class=\"row w-100\">\n      <div class=\"col-sm-6\">\n        <h3>*rxLet Directive cdRef#detectChanges</h3>\n        <ng-container *oLet=\"value2$; let value\">\n          <rxa-visualizer>\n            {{value}}\n          </rxa-visualizer>\n        </ng-container>\n      </div>\n\n      <div class=\"col-sm-6\">\n        <h3>*rxLet EmbeddedView cdRef#detectChanges</h3>\n        <ng-container *poc1Let=\"value1$; let value\">\n          <rxa-visualizer [viewType]=\"'embedded-view'\">\n            {{value}}\n          </rxa-visualizer>\n        </ng-container>\n      </div>\n    </div>\n  `,\n  changeDetection: environment.changeDetection\n})\nexport class ViewVsEmbeddedViewComponent {\n  btn1Click$ = new Subject<Event>();\n  btn2Click$ = new Subject<Event>();\n  value1$ = this.btn1Click$.pipe(\n    scan(a => ++a, 0)\n  );\n  value2$ = this.btn2Click$.pipe(\n    scan(a => ++a, 0)\n  );\n}\n"],"sourceRoot":"webpack:///"}