{"version":3,"sources":["./src/app/features/experiments/differ/rx-iterable-differ/rx-iterable-differ.module.ts","./src/app/features/experiments/differ/rx-iterable-differ/rx-iterable-differ/rx-iterable-differ.component.ts","./src/app/features/experiments/differ/rx-iterable-differ/rx-iterable-differ.routes.ts"],"names":[],"mappings":"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","file":"rx-iterable-differ-rx-iterable-differ-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TemplateModule } from '@rx-angular/template';\nimport { ROUTES } from './rx-iterable-differ.routes';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RxIterableDifferComponent } from './rx-iterable-differ/rx-iterable-differ.component';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer/visualizer.module';\nimport { ValueProvidersModule } from '../../../../shared/debug-helper/value-provider';\n\nconst DECLARATIONS = [RxIterableDifferComponent];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    TemplateModule,\n    DirtyChecksModule,\n    MatButtonModule,\n    VisualizerModule,\n    ValueProvidersModule\n  ]\n})\nexport class RxIterableDifferModule {\n}\n","import { ChangeDetectorRef, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { environment } from '../../../../../../environments/environment';\nimport { ArrayProviderService } from '../../../../../shared/debug-helper/value-provider';\nimport { rxIterableDifferFactory } from '../../shared';\nimport { RxState } from '@rx-angular/state';\nimport { Hooks } from '../../../../../shared/debug-helper/hooks';\nimport { bufferTime, filter, switchMap, switchMapTo } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-differ-rx-iterable-differ',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader class=\"row\">\n        <div class=\"col-sm-12\">\n          <h2>Reactive Iterable Differ</h2>\n          <rxa-array-provider [unpatched]=\"[]\" [buttons]=\"true\" #arrayP=\"rxaArrayProvider\"></rxa-array-provider>\n        </div>\n      </div>\n      <div class=\"w-100 row\">\n        <div class=\"col-sm-2\">\n          <h3>List</h3>\n          <div *ngFor=\"let enterRes of arrayP.array$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Enter</h3>\n          <div *ngFor=\"let enterRes of enter$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Move</h3>\n          <div *ngFor=\"let enterRes of move$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Identity Change</h3>\n          <div *ngFor=\"let enterRes of identityChange$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n        <div class=\"col-sm-2\">\n          <h3>Exit</h3>\n          <div *ngFor=\"let enterRes of exit$ | push\">\n            <pre>{{enterRes | json}}</pre>\n          </div>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: environment.changeDetection,\n  encapsulation: ViewEncapsulation.None,\n  providers: [ArrayProviderService]\n})\nexport class RxIterableDifferComponent extends Hooks {\n  @ViewChild('arrayP')\n  arrayP;\n\n  rxDiffer = rxIterableDifferFactory({\n    trackBy: 'id',\n    distinctBy: 'value'\n  });\n  enter$ = this.rxDiffer.enter$;\n  move$ = this.rxDiffer.update$;\n  identityChange$ = this.rxDiffer.update$;\n  exit$ = this.rxDiffer.exit$;\n\n  constructor(public state: RxState<any>,\n              public cdRef: ChangeDetectorRef) {\n    super();\n    this.state.hold(this.afterViewInit$, () => this.setupRxDiffer())\n    this.state.hold(this.afterViewInit$.pipe(switchMap(_ => this.arrayP.array$)), (v) => this.rxDiffer.next(v as any))\n  }\n\n  trackByIdFn = (a) => a.id;\n\n  setupRxDiffer() {\n    this.rxDiffer.connect();\n    this.rxDiffer.enter$.subscribe((result) => {\n      console.log('enter', result);\n    });\n    this.rxDiffer.update$.subscribe((result) => {\n      console.log('update', result);\n    });\n    this.rxDiffer.exit$.subscribe((result) => {\n      console.log('exit', result);\n    });\n    this.cdRef.detectChanges();\n  }\n}\n","import { RxIterableDifferComponent } from './rx-iterable-differ/rx-iterable-differ.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: RxIterableDifferComponent\n  }\n];\n"],"sourceRoot":"webpack:///"}