{"version":3,"sources":["./src/app/shared/utils/to-array.pipe.ts","./src/app/shared/utils/utils.module.ts","./src/app/features/integrations/dynamic-counter/rx-state-as-presenter/rx-state-as-presenter.component.ts","./src/app/features/integrations/dynamic-counter/rx-state-as-presenter/counter.presenter.ts","./src/app/features/integrations/dynamic-counter/rx-state-as-presenter/rx-state-as-presenter.routes.ts","./src/app/features/integrations/dynamic-counter/rx-state-as-presenter/rx-state-as-presenter.module.ts"],"names":[],"mappings":"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","file":"rx-state-as-presenter-rx-state-as-presenter-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { INITIAL_STATE } from '../shared/model';\nimport { CounterPresenterService } from './counter.presenter';\n\n@Component({\n  selector: 'rxa-dynamic-counter-and-forms',\n  template: `\n    <h1>RxState + Presenter Patters</h1>\n    <div class=\"counter\">\n\n      <rxa-counter-display [count$]=\"p.count$\"></rxa-counter-display>\n\n      <button (click)=\"p.dontTick()\" mat-raised-button>\n        Start\n      </button>\n\n      <button (click)=\"p.dontTick()\" mat-raised-button>\n        Pause\n      </button>\n\n      <button (click)=\"p.reset()\" mat-raised-button>\n        Reset\n      </button>\n\n      <br/>\n\n      <button (click)=\"p.setToClick()\" mat-raised-button>\n        Set To\n      </button>\n\n      <mat-form-field>\n        <label>Count</label>\n        <input #count type=\"number\" min=\"0\" matInput [value]=\"p.count$ | push\" (input)=\"p.changeCount(count.value)\"/>\n      </mat-form-field>\n      <br/>\n\n      <button (click)=\"p.countUp()\" mat-raised-button>\n        Count Up\n      </button>\n\n      <button (click)=\"p.countDown()\" mat-raised-button>\n        Count Down\n      </button>\n\n      <br/>\n\n      <mat-form-field>\n        <label>Tick Speed</label>\n        <input #tickSpeed type=\"number\" min=\"0\" matInput [value]=\"p.count$ | push\" (input)=\"p.changeTickSpeed(tickSpeed.value)\"/>\n      </mat-form-field>\n\n      <mat-form-field>\n        <label>CountDiff</label>\n        <input #countDiff type=\"number\" min=\"0\" matInput [value]=\"p.countDiff$ | push\" (input)=\"p.changeCountDiff(countDiff.value)\"/>\n      </mat-form-field>\n\n    </div>\n  `,\n  providers: [CounterPresenterService]\n})\nexport class RxStateAsPresenterComponent {\n\n  constructor(public p: CounterPresenterService) {\n    this.p.initialCounterState = INITIAL_STATE;\n    this.p.reset();\n  }\n\n}\n\n\n","import { EMPTY, Observable, Subject, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { RxState, selectSlice } from '@rx-angular/state';\nimport { CounterState, INITIAL_STATE } from '../shared/model';\nimport { toLatestFrom } from '../../../../shared/utils/to-latest-from';\nimport { updateCount } from '../shared/utils';\n\n@Injectable()\nexport class CounterPresenterService extends RxState<CounterState> {\n  private readonly countChangeSubject = new Subject<number>();\n  private readonly tickSpeedChangeSubject = new Subject<number>();\n  private readonly countDiffChangeSubject = new Subject<number>();\n  private readonly isTickingToggleSubject = new Subject<boolean>();\n  private readonly countUpToggleSubject = new Subject<boolean>();\n  private readonly setToClickSubject = new Subject<Event>();\n  private readonly updateCountTrigger$ = this.select(\n    selectSlice(['isTicking', 'tickSpeed']),\n    switchMap(s => (s.isTicking ? timer(0, s.tickSpeed) : EMPTY))\n  );\n\n  initialCounterState = INITIAL_STATE;\n\n  readonly count$: Observable<string> = this.select(map(s => s.count + ''));\n  readonly tickSpeed$: Observable<string> = this.select(map(s => s.tickSpeed + ''));\n  readonly countDiff$: Observable<string> = this.select(map(s => s.countDiff + ''));\n\n  constructor() {\n    super();\n    this.connect('isTicking', this.isTickingToggleSubject);\n    this.connect('countUp', this.countUpToggleSubject);\n    this.connect('countDiff', this.countDiffChangeSubject);\n    this.connect('tickSpeed', this.tickSpeedChangeSubject);\n    this.connect('count', this.setToClickSubject.pipe(toLatestFrom(this.countChangeSubject)));\n    this.connect('count', this.updateCountTrigger$, updateCount);\n  }\n\n  reset() {\n    this.set(this.initialCounterState);\n  }\n\n  setToClick() {\n    this.countChangeSubject.next();\n  }\n\n  changeTickSpeed(tickSpeed: string) {\n    this.tickSpeedChangeSubject.next(parseInt(tickSpeed, 10));\n  }\n\n  changeCountDiff(countDiff: string) {\n    this.tickSpeedChangeSubject.next(parseInt(countDiff, 10));\n  }\n\n  changeCount(count: string) {\n    this.countChangeSubject.next(parseInt(count, 10));\n  }\n\n  doTick() {\n    this.isTickingToggleSubject.next(true);\n  }\n\n  dontTick() {\n    this.isTickingToggleSubject.next(false);\n  }\n\n  countUp() {\n    this.countUpToggleSubject.next(true);\n  }\n\n  countDown() {\n    this.countUpToggleSubject.next(false);\n  }\n\n}\n\n\n","import { Routes } from '@angular/router';\nimport { RxStateAsPresenterComponent } from './rx-state-as-presenter.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: RxStateAsPresenterComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-state-as-presenter.routes';\nimport { RxStateAsPresenterComponent } from './rx-state-as-presenter.component';\nimport { SharedModule } from '../shared/shared.module';\n\nconst DECLARATIONS = [RxStateAsPresenterComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ROUTES)\n  ]\n})\nexport class RxStateAsPresenterModule {\n}\n"],"sourceRoot":"webpack:///"}