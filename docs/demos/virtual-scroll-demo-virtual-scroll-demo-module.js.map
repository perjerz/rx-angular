{"version":3,"sources":["./src/app/features/template/strategies/virtual-scroll-demo/virtual-scroll-demo.module.ts","./src/app/features/template/strategies/virtual-scroll-demo/scroll-item.component.ts","./src/app/features/template/strategies/virtual-scroll-demo/virtual-scroll-demo.routes.ts","./src/app/features/template/strategies/virtual-scroll-demo/virtual-scroll-demo.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC8B;AACf;AACL;AACP;AACH;AACO;;;AAa/C,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBARzB;YACP,4DAAY;YACZ,sEAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,kEAAM,CAAC;YAC7B,+DAAU;SACX;mIAGU,uBAAuB,mBATnB,yFAA0B,EAAE,0EAAmB,aAE5D,4DAAY;QACZ,sEAAe,gEAEf,+DAAU;6FAID,uBAAuB;cAVnC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,yFAA0B,EAAE,0EAAmB,CAAC;gBAC/D,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAe;oBACf,4DAAY,CAAC,QAAQ,CAAC,kEAAM,CAAC;oBAC7B,+DAAU;iBACX;aACF;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACV;AACyD;AACpD;;;;AAe9B,MAAM,mBAAmB;IAM9B,YAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAL7C,mEAAmE;QAC1D,SAAI,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC;QAEtB,cAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAElB,CAAC;;sFANtC,mBAAmB;mGAAnB,mBAAmB;QAH5B,0EAA8B;QAAA,uDAAiC;;QAAA,4DAAO;;QAAxC,0DAAiC;QAAjC,uKAAiC;;6FAGtD,mBAAmB;cAb/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,CAAC;;;;;;IAMP,CAAC;gBACH,QAAQ,EAAE;;GAET;aACF;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAA6E;AAEtE,MAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yFAA0B;KACtC;CACF,CAAC;;;;;;;;;;;;;ACRF;AAAA;AAAA;AAAA;AAAA;AAAkE;AACE;;;;;IAO9D,sEACE;IAAA,kFACE;IAAA,uEAAM;IAAA,uDAAgB;IAAA,4DAAO;IAC/B,4DAAkB;IACpB,4DAAM;;;IAFI,0DAAgB;IAAhB,uFAAgB;;AAMzB,MAAM,0BAA0B;IAKrC;QAJS,UAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAKjC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAC1C,CAAC;IAEO,QAAQ;QACd,OAAO,KAAK,CAAC,GAAG,CAAC;aACd,IAAI,CAAC,CAAC,CAAC;aACP,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;;oGAhBU,0BAA0B;0GAA1B,0BAA0B;kEAG1B,+EAAwB;;;;;QAbjC,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QAChC,iGACE;QAAA,sHACE;QAIJ,4DAA8B;;QAND,0DAAe;QAAf,wEAAe;QACrC,0DAAqD;QAArD,sFAAqD;;6FAQnD,0BAA0B;cAbtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;;;;;;;;GAST;aACF;sCAIsC,cAAc;kBAAlD,uDAAS;mBAAC,+EAAwB","file":"virtual-scroll-demo-virtual-scroll-demo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VirtualScrollDemoComponent } from './virtual-scroll-demo.component';\nimport { ScrollItemComponent } from './scroll-item.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { PushModule } from '@rx-angular/template';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './virtual-scroll-demo.routes';\n\n\n@NgModule({\n  declarations: [VirtualScrollDemoComponent, ScrollItemComponent],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    RouterModule.forChild(ROUTES),\n    PushModule\n  ]\n})\n\nexport class VirtualScrollDemoModule {\n}\n","import { Component } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { CdConfigService } from '../../../../shared/debug-helper/strategy-control-panel';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-scroll-item',\n  styles: [`:host {\n    display: flex;\n    align-items: center;\n    height: 50px;\n    outline: 1px solid gray;\n    padding: 1rem;\n  }`],\n  template: `\n    <span style=\"margin: 0 1rem;\">Val: {{ val$ | push: strategy$ }}</span>\n  `,\n})\nexport class ScrollItemComponent {\n  // this can be ANY value from ANY service which causes re-rendering\n  readonly val$ = interval(1000);\n\n  readonly strategy$ = this.cdConfig.$.pipe(map((s) => s.strategy));\n\n  constructor(private cdConfig: CdConfigService) {}\n}\n","import { Routes } from '@angular/router';\nimport { VirtualScrollDemoComponent } from './virtual-scroll-demo.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: VirtualScrollDemoComponent\n  }\n];\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { AfterViewInit, Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'rxa-virtual-scroll-demo',\n  template: `\n    <h1>Virtual Scroll Viewport</h1>\n    <cdk-virtual-scroll-viewport [itemSize]=\"50\" style=\"height: 500px;\">\n      <div *cdkVirtualFor=\"let item of items; let index = index\">\n        <rxa-scroll-item>\n          <span>Item: {{ item }}</span>\n        </rxa-scroll-item>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  `\n})\nexport class VirtualScrollDemoComponent implements AfterViewInit {\n  readonly items = this.getItems();\n\n  @ViewChild(CdkVirtualScrollViewport) scrollViewPort: CdkVirtualScrollViewport;\n\n  constructor() {\n  }\n\n  ngAfterViewInit(): void {\n    this.scrollViewPort.checkViewportSize();\n  }\n\n  private getItems(): number[] {\n    return Array(200)\n      .fill(1)\n      .map((v, i) => v + i);\n  }\n}\n"],"sourceRoot":"webpack:///"}