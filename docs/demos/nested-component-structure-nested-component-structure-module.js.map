{"version":3,"sources":["./src/app/shared/utils/cd-helper.ts","./src/app/features/performance/nested-component-structure/nested-component-structure.module.ts","./src/app/features/performance/nested-component-structure/nested-component-structure.routes.ts","./src/app/shared/debug-helper/cd-trigger/cd-trigger.module.ts","./src/app/features/performance/nested-component-structure/nested-component-structure.component.ts","./src/app/shared/debug-helper/cd-trigger/cd-trigger/cd-trigger.component.ts"],"names":[],"mappings":"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","file":"nested-component-structure-nested-component-structure-module.js","sourcesContent":["import { ApplicationRef, ChangeDetectorRef, Injectable, ɵdetectChanges, ɵmarkDirty } from '@angular/core';\n\n\n@Injectable()\nexport class CdHelper {\n\n  constructor(\n    protected cdRef: ChangeDetectorRef,\n    protected appRef: ApplicationRef\n  ) {}\n\n  appRef_tick() {\n    this.appRef.tick();\n  }\n cdRef_detectChanges() {\n    this.cdRef.detectChanges();\n  }\n\n  cdRef_markForCheck() {\n    this.cdRef.markForCheck();\n  }\n\n  markDirty() {\n    ɵmarkDirty((this.cdRef as any).context);\n  }\n\n  detectChanges() {\n    ɵdetectChanges((this.cdRef as any).context);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './nested-component-structure.routes';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PushModule, TemplateModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { DirtyChecksModule } from '../../../shared/debug-helper/dirty-checks';\nimport { NestedComponentStructureComponent } from './nested-component-structure.component';\nimport { VisualizerModule } from '../../../shared/debug-helper/visualizer';\nimport { CdTriggerModule } from '../../../shared/debug-helper/cd-trigger/cd-trigger.module';\nimport { ValueProvidersModule } from '../../../shared/debug-helper/value-provider';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { RenderingsModule } from '../../../shared/debug-helper/renderings';\nimport { ViewVsEmbeddedViewModule } from '../../experiments/structural-directives/view-vs-embedded-view/view-vs-embedded-view.module';\nimport { RecursiveModule } from '../../../shared/template-structures/recursive/recursive.module';\n\n\n@NgModule({\n  declarations: [\n    NestedComponentStructureComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    MatButtonModule,\n    DirtyChecksModule,\n    UnpatchEventsModule,\n    PushModule,\n    VisualizerModule,\n    CdTriggerModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    ValueProvidersModule,\n    MatButtonToggleModule,\n    RenderingsModule,\n    TemplateModule,\n    ViewVsEmbeddedViewModule,\n    RecursiveModule\n  ],\n  exports: []\n})\nexport class NestedComponentStructureModule {\n}\n","import { NestedComponentStructureComponent } from './nested-component-structure.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: NestedComponentStructureComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdTriggerComponent } from './cd-trigger/cd-trigger.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { ZonePatchedIconModule } from '../strategy-control-panel';\n\n\n@NgModule({\n  declarations: [CdTriggerComponent],\n  exports: [\n    CdTriggerComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    UnpatchEventsModule,\n    ZonePatchedIconModule\n  ]\n})\nexport class CdTriggerModule { }\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Component({\n  selector: 'rxa-nested-component-structure',\n  template: `\n    <rxa-visualizer>\n      <ng-container visualizerHeader>\n        <h1 class=\"mat-headline\">Nested Component Structure</h1>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12\">\n            <mat-form-field>\n              <mat-label>Nesting Level</mat-label>\n              <input matInput type=\"number\" [(ngModel)]=\"depth\">\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Min Value</mat-label>\n              <input matInput type=\"number\" [(ngModel)]=\"min\">\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Max Value</mat-label>\n              <input matInput type=\"number\" [(ngModel)]=\"max\">\n            </mat-form-field>\n            <div>\n              <mat-button-toggle-group\n                name=\"visibleExamples\"\n                aria-label=\"Visible Examples\"\n                [value]=\"displayStates.all\"\n                #group=\"matButtonToggleGroup\">\n                <mat-button-toggle [value]=\"displayStates.static\">Static</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.observable\">Observable</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.async\">Async</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.push\">Push</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.clet\">C Let</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.evlet\">Ev Let</mat-button-toggle>\n                <mat-button-toggle [value]=\"displayStates.all\">All</mat-button-toggle>\n              </mat-button-toggle-group>\n              <button mat-raised-button class=\"ml-2\" (click)=\"isVisible = !isVisible;\">\n                Toggle visibility to reset\n              </button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"row w-100\" *ngIf=\"isVisible\">\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.static)\">\n          <h2 class=\"mat-subheader\">Static</h2>\n          <rxa-value-provider [min]=\"min\" [max]=\"max\" [changes$]=\"btnBothClick$\"\n                              #staticVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab (click)=\"staticVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-static [depth]=\"depth\" [value]=\"staticVal.int\"></rxa-recursive-static>\n        </div>\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.observable)\">\n          <h2 class=\"mat-subheader\">Observable</h2>\n          <rxa-value-provider [min]=\"min\" [max]=\"max\" [changes$]=\"btnBothClick$\"\n                              #observableVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab [unpatch] (click)=\"observableVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-observable [depth]=\"depth\" [value$]=\"observableVal.int$\"></rxa-recursive-observable>\n        </div>\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.async)\">\n          <h2 class=\"mat-subheader\">Async</h2>\n          <rxa-value-provider [changes$]=\"btnBothClick$\" #asyncVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab (click)=\"asyncVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-async [depth]=\"depth\" [value]=\"asyncVal.int$ | async\">\n          </rxa-recursive-async>\n        </div>\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.push)\">\n          <h2 class=\"mat-subheader\">Push</h2>\n          <rxa-value-provider [changes$]=\"btnBothClick$\" #pushVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab [unpatch] (click)=\"pushVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-push [depth]=\"depth\" [value]=\"pushVal.int$ | push\">\n          </rxa-recursive-push>\n        </div>\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.clet)\">\n          <h2 class=\"mat-subheader\">Let - <small>Component CD</small></h2>\n          <rxa-value-provider [changes$]=\"btnBothClick$\" #letVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab [unpatch] (click)=\"letVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-component-let [depth]=\"depth\" [value]=\"letVal.int$\">\n          </rxa-recursive-component-let>\n        </div>\n        <div class=\"col\"\n             *ngIf=\"visible(group, displayStates.evlet)\">\n          <h2 class=\"mat-subheader\">Let - <small>EmbeddedView CD</small></h2>\n          <rxa-value-provider [changes$]=\"btnBothClick$\" #letVal=\"rxaValueProvider\"></rxa-value-provider>\n          <div class=\"mb-1\">\n            <button mat-mini-fab [unpatch] (click)=\"letVal.next()\">\n              <mat-icon>add</mat-icon>\n            </button>\n          </div>\n          <rxa-recursive-embedded-view-let [depth]=\"depth\" [value]=\"letVal.int$\">\n          </rxa-recursive-embedded-view-let>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class NestedComponentStructureComponent {\n  min = 0;\n  max = 5;\n\n  displayStates = {\n    none: 0,\n    all: 1,\n    static: 2,\n    observable: 3,\n    async: 4,\n    push: 5,\n    clet: 6,\n    evlet: 7\n  };\n  isVisible = true;\n  btnBothClick$ = new BehaviorSubject<any>(1);\n\n  private _depth = 5;\n  set depth(depth: number) {\n    this._depth = depth >= 1 ? depth : 1;\n  }\n\n  get depth(): number {\n    return this._depth;\n  }\n\n  selected(group, choice) {\n    return group.value === choice;\n  }\n\n  visible(group, choice) {\n    return group.value === choice || group.value === this.displayStates.all;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { CdHelper } from '../../../utils/cd-helper';\n\n@Component({\n  selector: 'rxa-cd-trigger',\n  template: `\n    <button mat-raised-button (click)=\"cdHelper.appRef_tick()\">\n      tick\n    </button>\n    <button mat-raised-button (click)=\"cdHelper.cdRef_markForCheck()\">\n      markForCheck <rxa-zone-patched-icon class=\"mat-icon\"></rxa-zone-patched-icon>\n    </button>\n    <button mat-raised-button [unpatch] (click)=\"cdHelper.cdRef_detectChanges()\">\n      detectChanges <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"'unpatched'\"></rxa-zone-patched-icon>\n    </button>\n    <button mat-raised-button [unpatch] (click)=\"cdHelper.markDirty()\">\n      ɵmarkDirty <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"'unpatched'\"></rxa-zone-patched-icon>\n    </button>\n    <button mat-raised-button [unpatch] (click)=\"cdHelper.detectChanges()\">\n      ɵdetectChanges <rxa-zone-patched-icon class=\"mat-icon\" [zoneState]=\"'unpatched'\"></rxa-zone-patched-icon>\n    </button>\n  `,\n  host: {\n    class: 'd-flex flex-wrap'\n  },\n  providers: [CdHelper]\n})\nexport class CdTriggerComponent {\n\n  @Input()\n  cdHelper = this._cdHelper;\n\n  constructor(private _cdHelper: CdHelper) { }\n\n}\n"],"sourceRoot":"webpack:///"}