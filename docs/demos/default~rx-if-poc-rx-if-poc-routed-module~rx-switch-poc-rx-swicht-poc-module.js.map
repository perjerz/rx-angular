{"version":3,"sources":["./src/app/shared/debug-helper/value-provider/value/value.module.ts","./src/app/features/experiments/structural-directives/rx-if-poc/poc2-if.directive.ts","./src/app/shared/utils/to-array.pipe.ts","./src/app/features/experiments/structural-directives/rx-if-poc/rx-if.directive.ts","./src/app/shared/utils/utils.module.ts","./src/app/features/experiments/structural-directives/rx-if-poc/rx-if-poc.component.ts","./src/app/shared/debug-helper/value-provider/value/value.component.ts","./src/app/features/experiments/structural-directives/rx-if-poc/poc1-if.directive.ts","./src/app/features/experiments/structural-directives/rx-if-poc/rx-if-poc.module.ts","./src/app/shared/debug-helper/work/index.ts"],"names":[],"mappings":"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","file":"default~rx-if-poc-rx-if-poc-routed-module~rx-switch-poc-rx-swicht-poc-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { DirtyChecksModule } from '../../dirty-checks';\nimport { ValueComponent } from './value.component';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LetModule, PushModule } from '@rx-angular/template';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst DEPRECATIONS = [ValueComponent];\n\n@NgModule({\n  declarations: [...DEPRECATIONS],\n    imports: [\n        CommonModule,\n        MatRippleModule,\n        PushModule,\n        UtilsModule,\n        LetModule,\n        MatIconModule,\n        DirtyChecksModule\n    ],\n  exports: [...DEPRECATIONS]\n})\nexport class ValueModule {\n\n}\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, switchAll } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc2If]'\n})\nexport class Poc2IfDirective<U> implements OnInit, OnDestroy {\n  observables$ = new ReplaySubject(1);\n  viewContext = { $implicit: undefined};\n  tuthyEmbeddedView;\n  falseyEmbeddedView;\n  falseyTemplateRef\n\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  @Input()\n  set poc2If(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n @Input()\n  set poc2IfFalsey(templateRef: TemplateRef<any>) {\n   this.falseyTemplateRef = templateRef;\n   this.falseyEmbeddedView = this.viewContainerRef.createEmbeddedView(\n     this.falseyTemplateRef,\n     this.viewContext\n   );\n  }\n\n  private subscription: Unsubscribable = new Subscription();\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly truthyTemplateRef: TemplateRef<any>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.tuthyEmbeddedView = this.viewContainerRef.createEmbeddedView(\n      this.truthyTemplateRef,\n      this.viewContext\n    );\n\n    this.subscription = this.values$\n      .subscribe(\n        v => {\n          this.viewContext.$implicit = v;\n          this.viewContainerRef.clear();\n          if(v) {\n            this.tuthyEmbeddedView = this.viewContainerRef.createEmbeddedView(\n              this.truthyTemplateRef,\n              this.viewContext\n            );\n            this.tuthyEmbeddedView.detectChanges();\n          } else {\n            this.falseyEmbeddedView = this.viewContainerRef.createEmbeddedView(\n              this.falseyTemplateRef,\n              this.viewContext\n            );\n            this.falseyEmbeddedView.detectChanges();\n          }\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.tuthyEmbeddedView.destroy();\n    if(this.falseyTemplateRef) {\n      this.falseyEmbeddedView.destroy();\n    }\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, switchAll } from 'rxjs/operators';\nimport { createTemplateManager, RxTemplateObserver, TemplateManager } from '@rx-angular/template';\n\n\ntype RxIfTemplateNames = 'truthy' | 'falsey';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rxIf]'\n})\nexport class RxIfDirective<U> implements OnInit, OnDestroy {\n  private activeName: RxIfTemplateNames;\n  private subscription: Unsubscribable = new Subscription();\n  private readonly templateManager: TemplateManager<{ $implicit: U | undefined | null }, RxIfTemplateNames>;\n\n  private readonly observables$ = new ReplaySubject(1);\n  private readonly values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll(),\n      distinctUntilChanged()\n    );\n\n  @Input()\n  set rxIf(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  @Input()\n  set rxIfFalsey(templateRef: TemplateRef<any>) {\n    if (templateRef) {\n      this.templateManager.addTemplateRef('falsey', templateRef);\n    }\n  }\n\n  private readonly templateObserver: RxTemplateObserver<U | null | undefined> = {\n    next: ($implicit: U | null | undefined) => this.updateView($implicit)\n  };\n\n  updateView = ($implicit) => {\n    const templateName = ($implicit != null && !!$implicit) ? 'truthy' : 'falsey';\n\n    this.templateManager.displayView(templateName);\n\n    if (this.templateManager.hasTemplateRef(templateName)) {\n      this.templateManager.updateViewContext({ $implicit });\n      this.templateManager.getEmbeddedView(templateName).detectChanges();\n      this.activeName = templateName;\n    } else {\n      const activeViewEmbeddedView = this.templateManager.getEmbeddedView(this.activeName);\n      if (this.activeName && activeViewEmbeddedView) {\n        // Detach currently inserted view from the container\n        this.viewContainerRef.detach();\n        activeViewEmbeddedView.detectChanges();\n        this.activeName = templateName;\n      }\n    }\n\n  };\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly truthyTemplateRef: TemplateRef<any>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n    this.templateManager = createTemplateManager(this.viewContainerRef, { $implicit: undefined });\n  }\n\n  ngOnInit() {\n    this.templateManager.addTemplateRef('truthy', this.truthyTemplateRef);\n    this.subscription = this.values$.subscribe(this.templateObserver);\n  }\n\n  ngOnDestroy() {\n    this.templateManager.destroy();\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Component } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { Subject } from 'rxjs';\nimport { scan, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-rx-if-poc',\n  template: `\n    <rxa-visualizer>\n      <div visualizerHeader>\n        <h2>\n          rxIf POC\n        </h2>\n        <button mat-raised-button (click)=\"toggleClick$.next($event)\" class=\"mr-1\">\n          toggle\n        </button>\n        <button mat-raised-button [unpatch] (click)=\"toggleClick$.next($event)\">\n          toggle (unpatched)\n        </button>\n      </div>\n      <div class=\"row w-100\">\n        <div class=\"col-sm-3\">\n          <h3>Angular Native</h3>\n          <ng-template #f1>\n            <div class=\"dh-embedded-view\">\n              <rxa-dirty-check></rxa-dirty-check>\n              FALSE\n            </div>\n          </ng-template>\n          <div class=\"dh-embedded-view\" *ngIf=\"value1$ | async; else: f1\">\n            <rxa-dirty-check></rxa-dirty-check>\n            TRUE\n          </div>\n        </div>\n        <div class=\"col-sm-3\">\n          <h3>Render EmbeddedViews directly</h3>\n          <ng-template #f1>\n            <div class=\"dh-embedded-view\">\n              <rxa-dirty-check></rxa-dirty-check>\n              FALSE\n            </div>\n          </ng-template>\n          <div class=\"dh-embedded-view\" *poc1If=\"value1$; let value; falsey: f1\">\n            <rxa-dirty-check></rxa-dirty-check>\n            TRUE\n          </div>\n\n        </div>\n        <div class=\"col-sm-3\">\n          <h3>Create/Destroy EmbeddedViews</h3>\n          <ng-template #f2>\n            <div class=\"dh-embedded-view\">\n              <rxa-dirty-check></rxa-dirty-check>\n              FALSE\n            </div>\n          </ng-template>\n          <div class=\"dh-embedded-view\" *poc2If=\"value1$; let value; falsey: f2\">\n            <rxa-dirty-check></rxa-dirty-check>\n            TRUE\n          </div>\n        </div>\n        <div class=\"col-sm-3\">\n          <h3>Display/Hide EmbeddedViews</h3>\n          <ng-template #f3>\n            <div class=\"dh-embedded-view\">\n              <rxa-dirty-check></rxa-dirty-check>\n              FALSE\n            </div>\n          </ng-template>\n          <div class=\"dh-embedded-view\" *rxIf=\"value1$; let value; falsey: f3\">\n            <rxa-dirty-check></rxa-dirty-check>\n            TRUE\n          </div>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: environment.changeDetection\n})\nexport class RxIfPocComponent {\n  toggleClick$ = new Subject<Event>();\n  value1$ = this.toggleClick$.pipe(\n    scan(a => !a, false),\n    startWith(false)\n  );\n}\n","// tslint:disable:no-unused-expression\n\nimport { Component, Input } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\nimport { toBoolean } from '../utils';\nimport { TestItem } from '../model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-value',\n  template: `\n    <mat-icon class=\"item\" [ngClass]=\"{red:!v, green:v}\" *rxLet=\"value$; let v\">{{v ? 'check' : 'highlight_off'}}</mat-icon>`,\n  styles: [`\n    .item.red {\n      color: red;\n    }\n    .item.green {\n      color: green;\n    }\n    .value.number {\n    }\n    .value.string {\n    }\n    .value.object {\n    }\n    .value.array {\n    }\n  `],\n  providers: [RxState]\n})\nexport class ValueComponent {\n  value$ = this.state.select(map(s => toBoolean(s.item.value, 0.5)));\n\n  @Input()\n  set value(o: Observable<TestItem> | TestItem) {\n    this.state.connect('item', isObservable(o) ? o : of(o));\n  }\n\n\n  constructor(public state: RxState<{ item: TestItem }>) {\n\n  }\n\n}\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, switchAll } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc1If]'\n})\nexport class Poc1IfDirective<U> implements OnInit, OnDestroy {\n  observables$ = new ReplaySubject(1);\n  viewContext = { $implicit: undefined};\n  tuthyEmbeddedView;\n  falseyEmbeddedView;\n  falseyTemplateRef\n\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  @Input()\n  set poc1If(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n @Input()\n  set poc1IfFalsey(templateRef: TemplateRef<any>) {\n   this.falseyTemplateRef = templateRef;\n   this.falseyEmbeddedView = this.viewContainerRef.createEmbeddedView(\n     this.falseyTemplateRef,\n     this.viewContext\n   );\n  }\n\n  private subscription: Unsubscribable = new Subscription();\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly truthyTemplateRef: TemplateRef<any>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.tuthyEmbeddedView = this.viewContainerRef.createEmbeddedView(\n      this.truthyTemplateRef,\n      this.viewContext\n    );\n\n    this.subscription = this.values$\n      .subscribe(\n        v => {\n          this.viewContext.$implicit = v;\n          if(v) {\n            this.tuthyEmbeddedView.detectChanges();\n          } else {\n            this.falseyEmbeddedView.detectChanges();\n          }\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.tuthyEmbeddedView.destroy();\n    if(this.falseyTemplateRef) {\n      this.falseyEmbeddedView.destroy();\n    }\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-if-poc.routes';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { Poc1IfDirective } from './poc1-if.directive';\nimport { RxIfPocComponent } from './rx-if-poc.component';\nimport { Poc2IfDirective } from './poc2-if.directive';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { RxIfDirective } from './rx-if.directive';\nimport { ValueModule } from '../../../../shared/debug-helper/work';\n\nconst DECLARATIONS = [\n  Poc1IfDirective,\n  Poc2IfDirective,\n  RxIfDirective,\n  RxIfPocComponent\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    CommonModule,\n    VisualizerModule,\n    UnpatchEventsModule,\n    MatButtonModule,\n    DirtyChecksModule,\n    ValueModule\n  ],\n  exports: DECLARATIONS\n})\nexport class RxIfPocModule {\n}\n","export {ValueModule} from '../value-provider/value/value.module';\nexport {ValueComponent} from '../value-provider/value/value.component';\n"],"sourceRoot":"webpack:///"}