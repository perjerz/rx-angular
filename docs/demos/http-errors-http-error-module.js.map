{"version":3,"sources":["./src/app/features/template/rx-let/http-errors/http-errors.component.ts","./src/app/features/template/rx-let/http-errors/http-error.routes.ts","./src/app/features/template/rx-let/http-errors/http-error.module.ts"],"names":[],"mappings":"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","file":"http-errors-http-error-module.js","sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { concatMap, share } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { RxState } from '@rx-angular/state';\n\n@Component({\n  selector: 'rxa-http-errors',\n  template: `\n    <mat-card class=\"card\">\n      <mat-card-header>\n        <h1>HTTP Errors</h1>\n      </mat-card-header>\n\n      <mat-card-content>\n        <div *rxLet=\"httpResponse$;\n            let r;\n            let e = $rxError;\n            \">\n          <h2>Default Template</h2>\n          R: {{ r | json }}\n          E: {{ e | json }}\n        </div>\n\n      </mat-card-content>\n\n      <mat-card-actions>\n        <button mat-button [unpatch] (click)=\"reset()\">\n          reset\n        </button>\n        <button mat-button [unpatch] (click)=\"offlineError()\">\n          offline\n        </button>\n        <button mat-button [unpatch] (click)=\"authError()\">\n          auth\n        </button>\n        <button mat-button [unpatch] (click)=\"accessError()\">\n          access\n        </button>\n        <button mat-button [unpatch] (click)=\"serverError()\">\n          server\n        </button>\n      </mat-card-actions>\n    </mat-card>\n\n\n\n  `,\n  styles: [\n      `\n      mat-card-content {\n        min-height: 10rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      mat-icon {\n        font-size: 5rem;\n        height: initial;\n        width: initial;\n      }\n\n      .card {\n        margin: 2rem;\n        text-align: center;\n        width: 20rem;\n      }\n    `\n  ],\n  providers: [RxState]\n})\nexport class HttpErrorsComponent {\n  error$ = new Subject<HttpErrorResponse>();\n  httpResponse$: Observable<Error> = this.setup();\n\n  constructor(private cdRef: ChangeDetectorRef) {\n  }\n\n  setup(): Observable<HttpErrorResponse> {\n    return this.error$.pipe(\n      concatMap(e => throwError(parseError(e))),\n      share()\n    );\n  }\n\n  reset() {\n    this.httpResponse$ = this.setup();\n    this.cdRef.detectChanges();\n  }\n\n  offlineError() {\n    this.error$.next(new HttpErrorResponse({ status: 0 }));\n  }\n\n  authError() {\n    this.error$.next(new HttpErrorResponse({ status: 401 }));\n  }\n\n  accessError() {\n    this.error$.next(new HttpErrorResponse({ status: 403 }));\n  }\n\n  serverError() {\n    this.error$.next(new HttpErrorResponse({ status: 501 }));\n  }\n\n}\n\nfunction parseError(e: HttpErrorResponse): string {\n  if (e.status === 0) {\n    return 'Offline Error!';\n  }\n  if (e.status === 401) {\n    return 'Auth Error!';\n  }\n  if (e.status === 403) {\n    return 'Access Error!';\n  }\n  if (e.status === 501) {\n    return 'Server Error!';\n  }\n  return 'Unknown Error';\n}\n","import { HttpErrorsComponent } from './http-errors.component';\n\nexport const ROUTES = [\n  {\n    path: '',\n    component: HttpErrorsComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { GhostElementsModule } from '../../../../shared/ghost-elements';\nimport { ROUTES } from './http-error.routes';\nimport { HttpErrorsComponent } from './http-errors.component';\n\nconst DECLARATIONS = [\n  HttpErrorsComponent\n];\n\n@NgModule({\n  declarations: [DECLARATIONS],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    GhostElementsModule,\n    DirtyChecksModule,\n    RouterModule.forChild(ROUTES)\n  ]\n})\nexport class HttpErrorModule {\n\n}\n"],"sourceRoot":"webpack:///"}