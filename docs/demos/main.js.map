{"version":3,"sources":["./src/app/features/template/strategies/strategies.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/rxjs/operators/select.ts","./src/app/features/home/home.component.ts","./src/app/features/integrations/integrations-shell.menu.ts","./src/app/features/experiments/differ/differ.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/array/toDictionary.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/cdk/index.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/object/dictionaryToArray.ts","./src/app/features/integrations/dynamic-counter/dynamic-counter.menu.ts","./src/app/app-shell/index.ts","./src/app/features/template/rx-let/rx-let.menu.ts","./src/app/app-component/index.ts","./src/app/shared/debug-helper/dirty-checks/index.ts","./src/environments/environment.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/array/update.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/object/patch.ts","./src/app/app-component/app-component.module.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/core/utils/safe-pluck.ts","./src/app/shared/debug-helper/dirty-checks/dirty-checks.module.ts","./src/app/app-shell/side-nav/side-nav.component.ts","./src/app/app-shell/side-nav/side-nav.component.html","./src/app/app-component/app.component.ts","./src/app/app-component/app.component.html","./src/app/app-shell/app-shell-component/app-shell.component.ts","./src/app/app-shell/app-shell-component/app-shell.component.html","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/object/setProp.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/core/utils/guards.ts","./src/app/app-component/app.menu.ts","./src/app/features/tutorials/basics/tutorial-basics.menu.ts","./src/app/features/performance/rx-let-vs-push/rx-let-vs-push.menu.ts","./src/app/features/experiments/structural-directives/structural-directives.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/cdk/side-effect-observable.ts","./src/app/shared/debug-helper/hooks.ts","./src/app/app-component/app-presenter.service.ts","./src/app/features/fundamentals/fundamentals.menu.ts","./src/app/app-shell/app-shell.module.ts","./src/app/shared/debug-helper/dirty-checks/dirty-checks.component.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/object/deleteProp.ts","./src/app/features/template/push/push.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/core/index.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/rxjs/operators/index.ts","./src/app/app-shell/app-shell-content.directives.ts","./src/app/app.module.ts","./src/app/app-shell/side-nav/utils.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/rx-state.service.ts","./src/app/features/template/unpatch/unpatch.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/array/remove.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/object/index.ts","./src/app/features/experiments/experiments-shell.menu.ts","./src/app/shared/environment.token.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/core/utils/pipe-from-array.ts","./src/app/features/performance/performance-shell.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/index.ts","./src/app/features/experiments/state/rx-state.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/_internals/valuesComparer.util.ts","./src/app/features/tutorials/tutorials-shell.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/object/toggle.ts","./src/app/app-shell/side-nav/side-nav-item.directive.ts","./src/app/shared/viewport.service.ts","./src/app/features/fundamentals/render-callback/render-callback.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/index.ts","./src/app/features/template/template-shell.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/array/insert.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/rxjs/operators/selectSlice.ts","./src/app/features/performance/alphas-compare/alphas-compare.menu.ts","./src/app/app-component/app.routes.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/rxjs/operators/distinctUntilSomeChanged.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/rxjs/operators/stateful.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/core/utils/index.ts","./src/app/features/template/viewport-prio/viewport-prio.menu.ts","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/transformation-helpers/array/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","/home/runner/work/rx-angular/rx-angular/libs/state/src/lib/cdk/accumulation-observable.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export const MENU_ITEMS = [\n  {\n    label: 'Renderer',\n    link: 'renderer'\n  },\n  {\n    label: 'Virtual Scroll Demo',\n    link: 'virtual-scroll-demo'\n  }\n];\n","import { MonoTypeOperatorFunction, Observable, OperatorFunction } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { isOperateFnArrayGuard, isStringArrayGuard, pipeFromArray } from '../../core/utils';\nimport { stateful } from './stateful';\n\n/**\n * @description\n * returns the state as shared, replayed and distinct `Observable<T>`. This way you don't have to think about late\n * subscribers, multiple subscribers or multiple emissions of the same value.\n *\n * @example\n * const state$ = state.pipe(select());\n * state$.subscribe(state => doStuff(state));\n *\n * @returns Observable<T>\n */\n\nexport function select<T>(): MonoTypeOperatorFunction<T>;\n\n/**\n * @description\n * returns the state as cached and distinct `Observable<A>`. Accepts arbitrary\n * [rxjs operators](https://rxjs-dev.firebaseapp.com/guide/operators) to enrich the selection with reactive composition.\n *\n * @example\n * const profilePicture$ = state.pipe(\n *   select(\n *    pluck('profilePicture'),\n *    switchMap(profilePicture => mapImageAsync(profilePicture))\n *   )\n * );\n * @param  { OperatorFunction<T, A> } op\n * @returns Observable<A>\n *\n * @docsPage select\n * @docsCategory operators\n */\nexport function select<T, A>(\n  op: OperatorFunction<T, A>\n): OperatorFunction<T, A>;\n/**\n * @internal\n */\nexport function select<T, A, B>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>\n): OperatorFunction<T, B>;\n/**\n * @internal\n */\nexport function select<T, A, B, C>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>\n): OperatorFunction<T, C>;\n/**\n * @internal\n */\nexport function select<T, A, B, C, D>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>\n): OperatorFunction<T, D>;\n/**\n * @internal\n */\nexport function select<T, A, B, C, D, E>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>,\n  op5: OperatorFunction<D, E>\n): OperatorFunction<T, E>;\n\n/**\n * @description\n * Access a single property of the state by providing keys.\n * Returns a single property of the state as cached and distinct `Observable<T[K1]>`.\n *\n * @example\n *  // Access a single property\n * const bar$ = state$.pipe(select('bar'));\n *\n * // Access a nested property\n * const foo$ = state$.pipe(select('bar', 'foo'));\n *\n * @return Observable<T[K1]>\n */\nexport function select<T, K1 extends keyof T>(\n  k1: K1\n): OperatorFunction<T, T[K1]>;\n/**\n * @internal\n */\nexport function select<T, K1 extends keyof T, K2 extends keyof T[K1]>(\n  k1: K1,\n  k2: K2\n): OperatorFunction<T, T[K1][K2]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5\n): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/**\n * @internal\n */\nexport function select<T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  k6: K6\n): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n\n/**\n * @internal\n */\nexport function select<T>(\n  ...opOrMapFn: OperatorFunction<T, any>[] | string[]\n): OperatorFunction<T, any> {\n  return (state$: Observable<T>) => {\n    if (!opOrMapFn || opOrMapFn.length === 0) {\n      return state$.pipe(stateful());\n    } else if (isStringArrayGuard(opOrMapFn)) {\n      return state$.pipe(stateful(pluck(...opOrMapFn)));\n    } else if (isOperateFnArrayGuard(opOrMapFn)) {\n      return state$.pipe(stateful(pipeFromArray(opOrMapFn)));\n    } else {\n      throw new Error('wrong params passed to select');\n    }\n  };\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'rxa-home',\n  template: `\n    <h1>Welcome to RxAngular Demos!</h1>\n    <h3>Explore various sections that will guide you through features of RxAngular.</h3>\n\n    <ul>\n      <li><h4>🏁 Fundamentals</h4></li>\n      Demos presenting fundamental rules and functionalities existing in Angular that are good to know before you start your journey with RxAngular.\n\n      <li><h4>🧰 Template</h4></li>\n      Playground for different functionalities of the <code>@rx-angular/template</code> package.\n\n      <li><h4>📋 Tutorials</h4></li>\n      Tutorials for features existing in the <code>@rx-angular</code> packages.\n\n      <li><h4>🧮 Integrations</h4></li>\n      <code>@rx-angular/state</code> integrated with different libraries and patterns.\n\n      <li><h4>🔬 Experiments</h4></li>\n      Experiments with features, that are still under development. ⚠️Warning! ⚠️Unstable or broken features may lay ahead!\n    </ul>\n  `,\n  styles: [`\n    code {\n      background: black;\n    }\n  `]\n})\nexport class HomeComponent {}\n","import { MENU_ITEMS as DYNAMIC_COUNTER_MENU } from './dynamic-counter/dynamic-counter.menu';\n\nexport const INTEGRATIONS_MENU_ITEMS = [\n  {\n    label: 'Dynamic Counter',\n    link: 'dynamic-counter',\n    children: DYNAMIC_COUNTER_MENU\n  }\n];\n","export const MENU_ITEMS = [\n  {\n    label: 'NgIterableDiffer',\n    link: 'ng-iterable-differ'\n  },\n  {\n    label: 'RxIterableDiffer',\n    link: 'rx-iterable-differ'\n  },\n  {\n    label: 'rxFor Differ',\n    link: 'rx-for-differ'\n  }\n];\n","import { OnlyKeysOfSpecificType } from '../interfaces/only-keys-of-specific-type';\nimport { isDefined, isKeyOf } from '../../core';\n\n/**\n * @description\n * Converts an array of objects to a dictionary {[key: string]: T}.\n * Accepts array T[] and key of type string, number or symbol as inputs.\n *\n *\n * @example\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}];\n *\n * const creaturesDictionary = toDictionary(creatures, 'id');\n *\n * // creaturesDictionary will be:\n * // {\n * //  1: {id: 1, type: 'cat'},\n * //  2: {id: 2, type: 'dog'},\n * //  3: {id: 3, type: 'parrot'}\n * // };\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly convertToDictionary$ = new Subject();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creaturesDictionary',\n *        this.convertToDictionary$,\n *        ({ creatures }) => {\n *            return toDictionary(creatures, 'id');\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    convertToDictionary(): void {\n *        this.state.set({ creaturesDictionary: toDictionary(this.state.get().creatures, 'id'});\n *    }\n * }\n *\n * @see {@link OnlyKeysOfSpecificType}\n * @param {OnlyKeysOfSpecificType<T, S>} key\n * @returns { [key: string]: T[] }\n * @docsPage toDictionary\n * @docsCategory transformation-helpers\n */\nexport function toDictionary<T extends object>(\n  source: T[],\n  key:\n    | OnlyKeysOfSpecificType<T, number>\n    | OnlyKeysOfSpecificType<T, string>\n    | OnlyKeysOfSpecificType<T, symbol>\n): { [key: string]: T } {\n  if (!isDefined(source)) {\n    return source;\n  }\n\n  const sourceEmpty = !source.length;\n\n  if (!Array.isArray(source) || sourceEmpty || !isKeyOf<T>(source[0][key])) {\n    if (!sourceEmpty) {\n      console.warn('ToDictionary: unexpected input params.');\n    }\n    return {};\n  }\n\n  return source.reduce(\n    (acc, entity) => ({\n      ...acc,\n      [entity[key] as any]: entity\n    }),\n    {}\n  );\n}\n","export * from './accumulation-observable';\nexport * from './side-effect-observable';\n","import { isDefined, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Converts a dictionary of type {[key: string]: T} to array T[].\n *\n * @example\n *\n * const creaturesDictionary = {\n *   '1': {id: 1, type: 'cat'},\n *   '2': {id: 2, type: 'dog'},\n *   '3': {id: 3, type: 'parrot'}\n * };\n *\n * const creaturesArray = dictionaryToArray(creaturesDictionary);\n *\n * // creaturesArray will be:\n * // [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *    readonly removeName$ = new Subject();\n *\n *    constructor(\n *      private state: RxState<ComponentState>,\n *      private api: ApiService\n *    ) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.api.creaturesDictionary$,\n *        (_, creatures) => {\n *            return dictionaryToArray(creatures);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeName(): void {\n *      this.api.creaturesDictionary$.pipe(\n *        // subscription handling logic\n *      ).subscribe(\n *        dictionary => this.set({creatures: dictionaryToArray(dictionary)})\n *      );\n *    }\n * }\n *\n * @returns T[];\n *\n * @docsPage dictionaryToArray\n * @docsCategory transformation-helpers\n */\nexport function dictionaryToArray<T>(dictionary: { [key: string]: T }): T[] {\n  if (!isDefined(dictionary)) {\n    return dictionary;\n  }\n\n  if (!isObjectGuard(dictionary)) {\n    console.warn(`DictionaryToArray: unexpected input.`);\n    return [];\n  }\n\n  return Object.values(dictionary);\n}\n","export const MENU_ITEMS = [\n  {\n    label: 'RxState and reactive forms',\n    link: 'rx-state-and-reactive-forms'\n  },\n  {\n    label: 'RxState as presenter',\n    link: 'rx-state-as-presenter'\n  },\n  {\n    label: 'RxState in the view',\n    link: 'rx-state-in-the-view'\n  },\n  {\n    label: 'RxState and subjects',\n    link: 'rx-state-and-subjects'\n  },\n  {\n    label: 'Starter',\n    link: 'starter'\n  }\n];\n","export * from './app-shell.module';\nexport * from './app-shell.models';\nexport * from './app-shell-content.directives';\nexport * from './app-shell-component/app-shell.component';\nexport * from './side-nav/side-nav.component';\n","export const MENU_ITEMS = [\n  {\n    label: 'Error Handling',\n    link: 'error-handling'\n  },\n  {\n    label: 'Http Errors',\n    link: 'http-errors'\n  },\n  {\n    label: '*ngif hack',\n    link: 'ng-if-hack'\n  },\n  {\n    label: 'Template Bindings',\n    link: 'template-bindings'\n  },\n  {\n    label: 'Preloading Techniques',\n    link: 'preloading-techniques'\n  },\n  {\n    label: 'Lazy Components',\n    link: 'lazy-components'\n  }\n];\n","export {AppComponent} from './app.component';\nexport {AppComponentModule} from './app-component.module';\n","export {DirtyChecksModule} from './dirty-checks.module';\nexport {DirtyChecksComponent} from './dirty-checks.component';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { ChangeDetectionStrategy } from '@angular/core';\n\nexport const environment = {\n  production: false,\n  zoneless: false,\n  changeDetection: ChangeDetectionStrategy.Default\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\nimport { isDefined } from '../../core';\n\n/**\n * @description\n * Updates one or multiple items in an array T[].\n * For comparison you can provide key, array of keys or a custom comparison function that should return true if items match.\n * If no comparison is provided, an equality check is used by default.\n * Returns a shallow copy of the array T[] and updated items, does not mutate the original array.\n *\n * @example\n * // Update with comparison function\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const newCat = {id: 1, type: 'lion'};\n *\n * const updatedCreatures = update(creatures, newCat, (a, b) => a.id === b.id);\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'lion'}, {id: 2, type: 'dog'}];\n *\n * @example\n * // Update with key\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const newCat = {id: 1, type: 'lion'};\n *\n * const updatedCreatures = update(creatures, newCat, 'id');\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'lion'}, {id: 2, type: 'dog'}];\n *\n * @example\n * // Update with array of keys\n *\n * const creatures = [{id: 1, type: 'cat', name: 'Bella'}, {id: 2, type: 'dog', name: 'Sparky'}];\n *\n * const newCat = {id: 1, type: 'lion', name: 'Bella'};\n *\n * const updatedCreatures = update(creatures, newCat, ['id', 'name']);\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'lion', name: 'Bella'}, {id: 2, type: 'dog', name: 'Sparky'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly updateCreature$ = new Subject<Creature>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.updateCreature$,\n *        ({ creatures }, creatureToUpdate) => {\n *            return update(creatures, creatureToUpdate, (a, b) => a.id === b.id);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    updateCreature(creatureToUpdate: Creature): void {\n *        this.state.set({ creatures: update(this.state.get().creatures, creatureToUpdate, (a, b) => a.id === b.id)});\n *    }\n * }\n *\n * @returns T[]\n *\n * @docsPage update\n * @docsCategory transformation-helpers\n */\nexport function update<T extends object>(\n  source: T[],\n  updates: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  const updatesAsArray = updates\n    ? Array.isArray(updates)\n      ? updates\n      : [updates]\n    : [];\n\n  const sourceDefined = isDefined(source);\n  const sourceIsArray = Array.isArray(source);\n  const invalidInput = !sourceIsArray && !isDefined(updates);\n\n  if (sourceDefined && !sourceIsArray) {\n    console.warn(`Update: Original value (${source}) is not an array.`);\n  }\n\n  if (invalidInput) {\n    return source;\n  }\n\n  if (!sourceDefined || !source.length || !sourceIsArray) {\n    return [...updatesAsArray] as T[];\n  }\n\n  return source.map((existingItem) => {\n    const match = updatesAsArray.find((item) =>\n      valuesComparer(item as T, existingItem, compare)\n    );\n\n    if (match) {\n      return { ...existingItem, ...match };\n    }\n\n    return existingItem;\n  });\n}\n","import { isObjectGuard } from '../../core';\n\n/**\n * @description\n * Merges an object of type T with updates of type Partial<T>.\n * Returns a new object where updates override original values while not mutating the original one.\n\n * @example\n * interface Creature {\n *  id: number,\n *  type: string,\n *  name: string\n * }\n *\n * const cat = {id: 1, type: 'cat'};\n *\n * const catWithname = patch(cat, {name: 'Fluffy'});\n *\n * // catWithname will be:\n * // {id: 1, type: 'cat', name: 'Fluffy'};\n *\n * @example\n * // Usage with RxState\n *\n * export class ProfileComponent {\n *\n *    readonly changeName$ = new Subject<string>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        this.changeName$,\n *        (state, name) => {\n *            return patch(state, { name });\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    changeName(name: string): void {\n *        this.state.set(patch(this.get(), { name }));\n *    }\n * }\n *\n * @returns T\n *\n * @docsPage patch\n * @docsCategory transformation-helpers\n */\nexport function patch<T extends object>(object: T, upd: Partial<T>): T {\n  const update = isObjectGuard(upd) ? upd : {};\n\n  if (!isObjectGuard(object) && isObjectGuard(upd)) {\n    console.warn(`Patch: original value ${object} is not an object.`);\n    return { ...update } as T;\n  }\n\n  if (!isObjectGuard(object) && !isObjectGuard(upd)) {\n    console.warn(\n      `Patch: original value ${object} and updates ${upd} are not objects.`\n    );\n    return object;\n  }\n\n  return { ...object, ...update };\n}\n","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { AppShellModule } from '../app-shell';\n// import { DirtyChecksModule } from '../debug-helper/dirty-checks/dirty-checks.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './app.routes';\nimport { DirtyChecksModule } from '../shared/debug-helper/dirty-checks';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    AppShellModule,\n    RouterModule.forRoot(ROUTES),\n    DirtyChecksModule\n  ],\n  declarations: [AppComponent],\n  exports: [],\n  bootstrap: [AppComponent]\n})\nexport class AppComponentModule {\n}\n","import { isDefined, isKeyOf, isObjectGuard } from './guards';\n\nexport function safePluck<T extends object, K1 extends keyof T>(\n  stateObject: T,\n  keys: K1 | [K1]\n): T[K1];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1]>(stateObject: T, keys: [K1, K2]): T[K1][K2];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2]>(stateObject: T, keys: [K1, K2, K3]): T[K1][K2][K3];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3]>(stateObject: T, keys: [K1, K2, K3, K4]): T[K1][K2][K3][K4];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]>(stateObject: T, keys: [K1, K2, K3, K4, K5]): T[K1][K2][K3][K4][K5];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  stateObject: T,\n  keys:\n    | [K1]\n    | [K1, K2]\n    | [K1, K2, K3]\n    | [K1, K2, K3, K4]\n    | [K1, K2, K3, K4, K5]\n    | [K1, K2, K3, K4, K5, K6]\n): T[K1][K2][K3][K4][K5][K6];\n\nexport function safePluck<T extends object,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]>(\n  stateObject: T,\n  keys:\n    | [K1]\n    | [K1, K2]\n    | [K1, K2, K3]\n    | [K1, K2, K3, K4]\n    | [K1, K2, K3, K4, K5]\n    | [K1, K2, K3, K4, K5, K6]\n):\n  | T[K1]\n  | T[K1][K2]\n  | T[K1][K2][K3]\n  | T[K1][K2][K3][K4]\n  | T[K1][K2][K3][K4][K5]\n  | T[K1][K2][K3][K4][K5][K6]\n  | null\n  | undefined {\n  // needed to match null and undefined conventions of RxAngular core components\n  // safePluck(null) -> return null\n  // safePluck(undefined) -> return undefined\n  // safePluck(obj, ['wrongKey']) -> return undefined\n  // safePluck(obj, ['correctKey']) -> return value of key\n  // safePluck(obj, '') -> return undefined\n  // safePluck(obj, null) -> return undefined\n  if (!isDefined(stateObject)) {\n    return stateObject;\n  }\n  if (!isDefined(keys)) {\n    return undefined;\n  }\n  // sanitize keys -> keep only valid keys (string, number, symbol)\n  const keysArr = (Array.isArray(keys) ? keys : [keys]).filter(k =>\n    isKeyOf<T>(k)\n  );\n  if (\n    keysArr.length === 0 ||\n    !isObjectGuard(stateObject) ||\n    Object.keys(stateObject).length === 0\n  ) {\n    return undefined;\n  }\n  let prop = stateObject[keysArr.shift() as K1];\n\n  keysArr.forEach(key => {\n    if (isObjectGuard(prop) && isKeyOf(key)) {\n      prop = prop[key];\n    }\n  });\n  return prop;\n}\n","import { NgModule } from '@angular/core';\nimport { DirtyChecksComponent } from './dirty-checks.component';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst DEPRECATIONS = [DirtyChecksComponent];\n\n@NgModule({\n  declarations: [...DEPRECATIONS],\n  imports: [\n    CommonModule,\n    MatRippleModule\n  ],\n  exports: [...DEPRECATIONS]\n})\nexport class DirtyChecksModule {\n\n}\n","import { NestedTreeControl } from '@angular/cdk/tree';\nimport { ChangeDetectionStrategy, Component, Input, Output } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { RxState } from '@rx-angular/state';\nimport { Subject } from 'rxjs';\nimport { AppShellNavItem } from '../app-shell.models';\nimport { generateRoutes } from './utils';\n\ninterface SideNavState {\n  navItems: AppShellNavItem[];\n}\n\n@Component({\n  selector: 'rxa-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RxState],\n})\nexport class AppShellSideNavComponent {\n  readonly navItemDataSource = new MatTreeNestedDataSource<AppShellNavItem>();\n  readonly treeControl = new NestedTreeControl<AppShellNavItem>(\n    (node) => node.children,\n  );\n\n  @Input() set navItems(navItems: AppShellNavItem[]) {\n    this.navItemDataSource._data.next(generateRoutes(navItems) || []);\n  }\n\n  @Output() readonly navItemSelected = new Subject<AppShellNavItem>();\n\n  readonly viewState$ = this.state.select();\n\n  constructor(private state: RxState<SideNavState>) {}\n\n  hasChild = (_: number, node: AppShellNavItem) =>\n    !!node.children && node.children.length > 0;\n\n  trackNavItem(i: number, navItem: AppShellNavItem): string | any[] {\n    return navItem.link;\n  }\n}\n","<cdk-tree\n  class=\"ot-app-shell-tree\"\n  [dataSource]=\"navItemDataSource\"\n  [treeControl]=\"treeControl\"\n>\n  <!-- This is the tree node template for leaf nodes -->\n  <cdk-nested-tree-node\n    *cdkTreeNodeDef=\"let navItem; let level = level\"\n    class=\"app-shell-tree-node app-shell-leaf-node\"\n  >\n    <a\n      mat-flat-button\n      (click)=\"navItemSelected.next(navItem)\"\n      [routerLink]=\"navItem.link\"\n      routerLinkActive=\"active\"\n      rxaAppShellSideNavItem\n      [rxaAppShellSideNavItemLevel]=\"level\"\n      class=\"w-100 text-left\"\n    >\n      <mat-icon\n        *ngIf=\"navItem.icon\"\n        class=\"mr-1\"\n        [svgIcon]=\"navItem.icon.svgIcon\"\n      >\n        {{ navItem.icon.matIcon }}\n      </mat-icon>\n      {{ navItem.label }}\n    </a>\n  </cdk-nested-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <cdk-nested-tree-node\n    *cdkTreeNodeDef=\"let navItem; let level = level; when: hasChild\"\n    class=\"app-shell-tree-node app-shell-expandable-node\"\n  >\n    <a\n      mat-flat-button\n      rxaAppShellSideNavItem\n      [rxaAppShellSideNavItemLevel]=\"level\"\n      cdkTreeNodeToggle\n      class=\"w-100 text-left\"\n    >\n      <mat-icon\n        *ngIf=\"navItem.icon\"\n        class=\"mr-1\"\n        [svgIcon]=\"navItem.icon.svgIcon\"\n      >\n        {{ navItem.icon.matIcon }}\n      </mat-icon>\n      <strong>{{ navItem.label }}</strong>\n    </a>\n    <div [hidden]=\"!treeControl.isExpanded(navItem)\">\n      <ng-container cdkTreeNodeOutlet></ng-container>\n    </div>\n  </cdk-nested-tree-node>\n</cdk-tree>\n","import { Component } from '@angular/core';\nimport { AppPresenter } from './app-presenter.service';\nimport { MENU_ITEMS } from './app.menu';\n\n@Component({\n  selector: 'rxa-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [AppPresenter],\n})\nexport class AppComponent {\n  menuItems = MENU_ITEMS;\n  constructor(public vm: AppPresenter) {}\n}\n","<rxa-app-shell>\n  <rxa-side-nav [navItems]=\"menuItems\"> </rxa-side-nav>\n  <ng-container rxaAppShellSidenavTitle>\n    <a style=\"color: inherit; text-decoration: none;\" routerLink=\"/\">RxAngular Demos</a>\n  </ng-container>\n  <ng-container rxaAppShellHeaderContent>\n    <rxa-dirty-check [color]=\"'#3700ff1f'\" radius=\"40\"></rxa-dirty-check>\n  </ng-container>\n  <router-outlet></router-outlet>\n</rxa-app-shell>\n","import { CdkScrollable } from '@angular/cdk/overlay';\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { RxState } from '@rx-angular/state';\nimport { Subject } from 'rxjs';\nimport { filter, tap, withLatestFrom } from 'rxjs/operators';\nimport { ViewportService } from '../../shared/viewport.service';\n\ninterface AppShellState {\n  isHandset: boolean;\n  showBackButton: boolean;\n  backButtonNavigation: any[];\n}\n\n@Component({\n  selector: 'rxa-app-shell',\n  templateUrl: './app-shell.component.html',\n  styleUrls: ['./app-shell.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RxState],\n})\nexport class AppShellComponent implements AfterViewInit {\n  readonly viewState$ = this.state.select();\n  readonly onBackButtonClick = new Subject<MouseEvent | TouchEvent>();\n  @ViewChild(CdkScrollable) readonly bodyScrollElement!: CdkScrollable;\n\n  constructor(\n    private viewport: ViewportService,\n    private state: RxState<AppShellState>,\n    private router: Router,\n  ) {\n    this.connectViewport();\n    this.connectBackButtonState();\n    this.handleBackButtonClick();\n  }\n\n  ngAfterViewInit(): void {\n    this.handleScrollPositionAfterNavigationEnd();\n  }\n\n  private handleBackButtonClick(): void {\n    this.state.hold(\n      this.onBackButtonClick.pipe(\n        withLatestFrom(this.state.select('backButtonNavigation')),\n      ),\n      ([event, backButtonNavigation]) => {\n        if (backButtonNavigation) {\n          this.router.navigate(backButtonNavigation);\n        } else {\n          history.back();\n        }\n      },\n    );\n  }\n\n  private handleScrollPositionAfterNavigationEnd(): void {\n    // this effect makes sure the scrollable body gets reset to top: 0 after a route got changed\n    this.state.hold(\n      this.router.events.pipe(\n        filter((e) => e instanceof NavigationEnd),\n        tap(() => this.bodyScrollElement.scrollTo({ top: 0 })),\n      ),\n    );\n  }\n\n  private connectBackButtonState(): void {\n    this.state.connect(\n      this.router.events.pipe(\n        filter((event) => event instanceof NavigationEnd),\n      ),\n      () => {\n        let root = this.router.routerState.snapshot.root;\n        while (root.children && root.children.length) {\n          root = root.children[0];\n        }\n        return {\n          showBackButton: root.data?.showBackButton || false,\n          backButtonNavigation:\n            root.data?.backButtonNavigation || null,\n        };\n      },\n    );\n  }\n\n  private connectViewport(): void {\n    this.state.connect('isHandset', this.viewport.isHandset$);\n  }\n}\n","<mat-sidenav-container\n  class=\"app-shell-container\"\n  *ngIf=\"viewState$ | async as state\"\n>\n  <mat-sidenav\n    #drawer\n    class=\"app-shell-sidenav\"\n    fixedInViewport\n    [attr.role]=\"state.isHandset ? 'dialog' : 'navigation'\"\n    [mode]=\"state.isHandset ? 'over' : 'side'\"\n    [opened]=\"state.isHandset === false\"\n  >\n    <mat-toolbar color=\"primary\">\n      <ng-content select=\"[rxaAppShellSidenavTitle]\"></ng-content>\n    </mat-toolbar>\n    <ng-content select=\"rxa-side-nav\"></ng-content>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"app-shell-content\">\n    <mat-toolbar class=\"app-shell-header\" color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"state.isHandset && !state.showBackButton\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"onBackButtonClick.next($event)\"\n        *ngIf=\"state.showBackButton\"\n      >\n        <mat-icon aria-label=\"navigate back\">keyboard_backspace</mat-icon>\n      </button>\n      <ng-content select=\"[rxaAppShellHeaderContent]\"></ng-content>\n    </mat-toolbar>\n    <div class=\"container-fluid app-shell-content-container\" cdkScrollable>\n      <ng-content></ng-content>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { isDefined, isKeyOf, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Accepts an object of type T, key of type K extends keyof T, and value of type T[K].\n * Sets the property and returns a newly updated shallow copy of an object while not mutating the original one.\n *\n * @example\n *\n * const cat = {id: 1, type: 'cat', name: 'Fluffy'};\n *\n * const renamedCat = setProp(cat, 'name', 'Bella');\n *\n * // renamedCat will be:\n * // {id: 1, type: 'cat', name: 'Bella'};\n *\n * @example\n * // Usage with RxState\n *\n * export class ProfileComponent {\n *\n *    readonly changeName$ = new Subject<string>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        this.changeName$,\n *        (state, name) => {\n *            return setProp(state, 'name', name);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    changeName(name: string): void {\n *        this.state.set(setProp(this.get(), 'name', name));\n *    }\n * }\n *\n * @returns T\n *\n * @docsPage setProp\n * @docsCategory transformation-helpers\n */\nexport function setProp<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n  value: T[K]\n): T {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf<T>(key);\n  const initialObject = objectIsObject ? object : ({} as T);\n\n  if (!objectIsObject) {\n    console.warn(`SetProp: original value (${object}) is not an object.`);\n  }\n\n  if (!keyIsValid) {\n    console.warn(`SetProp: key argument (${key}) is invalid.`);\n  }\n\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n\n  if (keyIsValid) {\n    return {\n      ...initialObject,\n      [key]: value\n    };\n  }\n\n  return { ...initialObject };\n}\n","import { OperatorFunction } from 'rxjs';\n\nexport function isPromiseGuard<T>(value: unknown): value is Promise<T> {\n  return (\n    !!value &&\n    typeof (<any>value).subscribe !== 'function' &&\n    typeof (value as any).then === 'function'\n  );\n}\n\nexport function isOperateFnArrayGuard<T, R = T>(\n  op: any[]\n): op is OperatorFunction<T, R>[] {\n  if (!Array.isArray(op)) {\n    return false;\n  }\n  return op.length > 0 && op.every((i: any) => typeof i === 'function');\n}\n\nexport function isStringArrayGuard(op: any[]): op is string[] {\n  if (!Array.isArray(op)) {\n    return false;\n  }\n  return op.length > 0 && op.every((i: any) => typeof i === 'string');\n}\n\nexport function isIterableGuard<T>(obj: unknown): obj is Array<T> {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n  return typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\nexport function isKeyOf<O>(k: unknown): k is keyof O {\n  return (\n    !!k &&\n    (typeof k === 'string' || typeof k === 'symbol' || typeof k === 'number')\n  );\n}\n\nexport function isObjectGuard(obj: unknown): obj is object {\n  return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nexport function isDefined(val: unknown): val is NonNullable<any> {\n  return val !== null && val !== undefined;\n}\n","import { FUNDAMENTALS_MENU } from '../features/fundamentals/fundamentals.menu';\nimport { TEMPLATE_MENU } from '../features/template/template-shell.menu';\nimport { TUTORIALS_MENU } from '../features/tutorials/tutorials-shell.menu';\nimport { INTEGRATIONS_MENU_ITEMS } from '../features/integrations/integrations-shell.menu';\nimport { EXPERIMENTS_MENU as EXPERIMENTS_MENU_ITEMS } from '../features/experiments/experiments-shell.menu';\nimport { MENU_ITEMS as PERFORMANCE_MENU_ITEMS } from '../features/performance/performance-shell.menu';\n\nexport const MENU_ITEMS = [\n  {\n    label: '🏁 Fundamentals',\n    link: 'fundamentals',\n    children: FUNDAMENTALS_MENU\n  },\n  {\n    label: '🧰 Template',\n    link: 'template',\n    children: TEMPLATE_MENU\n  },\n  {\n    label: '📋 Tutorials',\n    link: 'tutorials',\n    children: TUTORIALS_MENU\n  },\n  {\n    label: '🧮 Integrations',\n    link: 'integrations',\n    children: INTEGRATIONS_MENU_ITEMS\n  },\n  {\n    label: '🔬 Experiments',\n    link: 'experiments',\n    children: EXPERIMENTS_MENU_ITEMS\n  },\n  {\n    label: '🏎️ Performance',\n    link: 'performance',\n    children: PERFORMANCE_MENU_ITEMS\n  }\n];\n","export const TUTORIAL_BASICS_MENU = [\n  {\n    label: 'Setup',\n    link: 'setup'\n  },\n  {\n    label: 'Input Bindings',\n    link: 'input-bindings'\n  },\n  {\n    label: 'Output Bindings',\n    link: 'output-bindings'\n  },\n  {\n    label: 'Global State',\n    link: 'global-state'\n  },\n  {\n    label: 'Side Effects',\n    link: 'side-effects'\n  },\n  {\n    label: 'Presenter Pattern',\n    link: 'presenter-pattern'\n  },\n  {\n    label: 'Demo Basics Completed',\n    link: 'solution'\n  }\n];\n","export const RXLET_VS_PUSH_MENU_ITEMS = [\n  {\n    link: 'rx-let-vs-push',\n    label: 'RxLet vs Push',\n    children: [\n      {\n        link: 'list-toggle',\n        label: 'List toggle',\n      },\n    ],\n  },\n];\n","export const MENU_ITEMS = [\n  {\n    link: 'view-vs-embedded-view',\n    label: 'View vs EmbeddedView'\n  },\n  {\n    link: 'rx-if-poc',\n    label: 'RxIf Poc'\n  },\n  {\n    link: 'rx-swicht-poc',\n    label: 'RxSwitch POC'\n  },\n  {\n    link: 'rx-for-poc',\n    label: 'RxFor POC'\n  }\n];\n","import { merge, Observable, queueScheduler, Subject, Subscribable, Subscription } from 'rxjs';\nimport { mergeAll, observeOn } from 'rxjs/operators';\n\nexport function createSideEffectObservable<T>(\n  stateObservables = new Subject<Observable<T>>()\n): {\n  effects$: Observable<T>;\n  nextEffectObservable: (effect$: Observable<T>) => void;\n} & Subscribable<T> {\n  const effects$: Observable<T> = merge(\n    stateObservables.pipe(mergeAll(), observeOn(queueScheduler))\n  );\n\n  function nextEffectObservable(effect$: Observable<T>): void {\n    stateObservables.next(effect$);\n  }\n\n  function subscribe(): Subscription {\n    return effects$.subscribe();\n  }\n\n  return {\n    effects$,\n    nextEffectObservable,\n    subscribe\n  };\n}\n","import { AfterViewInit, Injectable, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\n\n@Injectable()\nexport abstract class Hooks implements OnDestroy, AfterViewInit, OnChanges {\n  afterViewInit$ = new ReplaySubject(1);\n  onChanges$ = new Subject();\n  onDestroy$ = new ReplaySubject(1);\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.onChanges$.next();\n  }\n\n  ngAfterViewInit(): void {\n    this.afterViewInit$.next();\n    this.afterViewInit$.complete();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n\n    this.onChanges$.complete();\n    this.afterViewInit$.complete();\n    this.onDestroy$.complete();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Injectable()\nexport class AppPresenter {\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","import { RENDERCALLBACK_MENU } from './render-callback/render-callback.menu';\n\nexport const FUNDAMENTALS_MENU = [\n  {\n    link: 'nested-vs-injected',\n    label: 'Nested vs Projected'\n  },\n  {\n    link: 'passing-values',\n    label: 'Passing Values'\n  },\n  {\n    link: 'zone-patched-apis',\n    label: 'Zone Patched APIs'\n  },\n  {\n    label: 'Scheduling',\n    link: 'scheduling'\n  },\n  {\n    label: 'Coalescing',\n    link: 'coalescing'\n  },\n  ...RENDERCALLBACK_MENU\n];\n","import { CdkTreeModule } from '@angular/cdk/tree';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { AppShellHeaderContent, AppShellSidenavContent, AppShellSidenavTitle } from './app-shell-content.directives';\nimport { AppShellComponent } from './app-shell-component/app-shell.component';\nimport { AppShellSideNavItemDirective } from './side-nav/side-nav-item.directive';\nimport { AppShellSideNavComponent } from './side-nav/side-nav.component';\n\nconst exportedDeclarations = [\n  AppShellHeaderContent,\n  AppShellSidenavContent,\n  AppShellComponent,\n  AppShellSidenavTitle,\n  AppShellSideNavComponent,\n];\n\n@NgModule({\n  declarations: [...exportedDeclarations, AppShellSideNavItemDirective],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule,\n    MatSelectModule,\n    CdkTreeModule,\n  ],\n  exports: exportedDeclarations,\n})\nexport class AppShellModule {}\n","import { AfterViewInit, Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { MatRipple } from '@angular/material/core';\nimport { Hooks } from '../hooks';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-dirty-check',\n  template: `\n\n  `,\n  styles: [`\n    :host .indicator-ripple {\n      border: 1px solid #ffff005f;\n    }`]\n})\nexport class DirtyChecksComponent extends Hooks {\n  @ViewChild(MatRipple) ripple: MatRipple;\n\n  displayElem;\n  dirtyChecks = 0;\n\n  @Input()\n  rippleOn = true;\n\n\n  @Input()\n  radius = 20;\n\n  @Input()\n  color = 'rgba(253,255,0,0.24)';\n\n  @Input()\n  rippleEffect = { centered: true };\n\n\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    super();\n    this.afterViewInit$.subscribe(() => {\n      this.ripple.launch(this.rippleEffect);\n      this.displayElem = this.elementRef.nativeElement.children[0].children[0];\n      this.numDirtyChecks();\n    });\n  }\n\n  numDirtyChecks() {\n    // tslint:disable-next-line:no-unused-expression\n    this.rippleOn && this.ripple && this.ripple.launch(this.rippleEffect);\n    // tslint:disable-next-line:no-unused-expression\n    this.displayElem && this.renderer.setProperty(this.displayElem, 'innerHTML', ++this.dirtyChecks + '');\n  }\n}\n","import { isDefined, isKeyOf, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Accepts an object of type T and key of type K extends keyof T.\n * Removes property from an object and returns a shallow copy of the updated object without specified property.\n * If property not found returns copy of the original object.\n * Not mutating original object.\n *\n * @example\n *\n * const cat = {id: 1, type: 'cat', name: 'Fluffy'};\n *\n * const anonymusCat = deleteProp(cat, 'name');\n *\n * // anonymusCat will be:\n * // {id: 1, type: 'cat'};\n *\n * @example\n * // Usage with RxState\n *\n * export class ProfileComponent {\n *\n *    readonly removeName$ = new Subject();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        this.removeName$,\n *        (state) => {\n *            return deleteProp(state, 'name');\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeName(): void {\n *        this.state.set(remove(this.get(), 'name'));\n *    }\n * }\n *\n * @returns Omit<T, K>\n *\n * @docsPage deleteProp\n * @docsCategory transformation-helpers\n */\nexport function deleteProp<T extends object, K extends keyof T>(\n  object: T,\n  key: K\n): Omit<T, K> {\n  if (!isDefined(object) || !isObjectGuard(object)) {\n    console.warn(`DeleteProp: original value ${object} is not an object.`);\n    return object;\n  }\n\n  if (!isKeyOf<T>(key)) {\n    console.warn(`DeleteProp: provided key is not a string, number or symbol.`);\n    return { ...object };\n  }\n\n  const copy = { ...object };\n  delete copy[key];\n  return copy;\n}\n","export const MENU_ITEMS = [\n  {\n    label: 'Push Basic Example',\n    link: 'basic-example'\n  }\n];\n","export * from './utils';\n","export * from './stateful';\nexport * from './select';\nexport * from './distinctUntilSomeChanged';\nexport * from './selectSlice';\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[rxaAppShellSidenavContent]',\n})\nexport class AppShellSidenavContent {}\n\n@Directive({\n  selector: '[rxaAppShellHeaderContent]',\n})\nexport class AppShellHeaderContent {}\n\n@Directive({\n  selector: '[rxaAppShellSidenavTitle]',\n})\nexport class AppShellSidenavTitle {}\n","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent, AppComponentModule } from './app-component';\nimport { ENVIRONMENT_SETTINGS } from './shared/environment.token';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './features/home/home.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppComponentModule\n  ],\n  providers: [\n    {\n      provide: ENVIRONMENT_SETTINGS,\n      useValue: environment\n    }\n  ],\n  declarations: [HomeComponent],\n  exports: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { AppShellNavItem } from '../app-shell.models';\n\nexport function generateRoutes(navigationItems: AppShellNavItem[], link: string = ''): AppShellNavItem[] {\n  return navigationItems.reduce(\n    (items, item) => {\n      item.link = link ? link + '/' + item.link : item.link;\n      if (item.children && item.children.length) {\n        item.children = generateRoutes(item.children, item.link);\n      }\n      return items.concat([item]);\n    }, []);\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { isObservable, Observable, OperatorFunction, Subscribable, Subscription, Unsubscribable } from 'rxjs';\nimport { map, pluck, tap } from 'rxjs/operators';\nimport { isKeyOf, isOperateFnArrayGuard, isStringArrayGuard, pipeFromArray, safePluck } from './core';\nimport { AccumulationFn, createAccumulationObservable, createSideEffectObservable } from './cdk';\nimport { stateful } from './rxjs/operators';\n\ntype ProjectStateFn<T> = (oldState: T) => Partial<T>;\ntype ProjectValueFn<T, K extends keyof T> = (oldState: T) => T[K];\n\ntype ProjectStateReducer<T, V> = (oldState: T, value: V) => Partial<T>;\n\ntype ProjectValueReducer<T, K extends keyof T, V> = (\n  oldState: T,\n  value: V\n) => T[K];\n\n/**\n * @description\n * RxState is a light-weight reactive state management service for managing local state in angular.\n *\n * @example\n * Component({\n *   selector: 'app-stateful',\n *   template: `<div>{{ state$ | async | json }}</div>`,\n *   providers: [RxState]\n * })\n * export class StatefulComponent {\n *   readonly state$ = this.state.select();\n *\n *   constructor(private state: RxState<{ foo: string }>) {}\n * }\n *\n * @docsCategory RxState\n * @docsPage RxState\n */\n@Injectable()\nexport class RxState<T extends object> implements OnDestroy, Subscribable<T> {\n  private subscription = new Subscription();\n\n  private accumulator = createAccumulationObservable<T>();\n  private effectObservable = createSideEffectObservable();\n\n  /**\n   * @description\n   * The unmodified state exposed as `Observable<T>`. It is not shared, distinct or gets replayed.\n   * Use the `$` property if you want to read the state without having applied {@link stateful} to it.\n   */\n  readonly $: Observable<T> = this.accumulator.signal$;\n\n  /**\n   * @internal\n   */\n  constructor() {\n    this.subscription.add(this.subscribe());\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * @description\n   *\n   * Allows to customize state accumulation function.\n   * This can be helpful to implement deep updates and tackle other immutability problems in a custom way.\n   * @example\n   *\n   * ```typescript\n   * const myAccumulator = (state: MyState, slice: Partial<MyState>) => deepCopy(state, slice);\n   *\n   * this.state.setAccumulator(myAccumulator);\n   * ```\n   */\n  setAccumulator(accumulatorFn: AccumulationFn): void {\n    this.accumulator.nextAccumulator(accumulatorFn);\n  }\n\n  /**\n   * @description\n   * Read from the state in imperative manner. Returns the state object in its current state.\n   *\n   * @example\n   * const { disabled } = state.get();\n   * if (!disabled) {\n   *   doStuff();\n   * }\n   *\n   * @return T\n   */\n  get(): T;\n\n  /**\n   * @description\n   * Read from the state in imperative manner by providing keys as parameters.\n   * Returns the part of state object.\n   *\n   * @example\n   * // Access a single property\n   *\n   * const bar = state.get('bar');\n   *\n   * // Access a nested property\n   *\n   * const foo = state.get('bar', 'foo');\n   *\n   * @return T | T[K1] | T[K1][K2]\n   */\n\n  get<K1 extends keyof T>(k1: K1): T[K1];\n  /** @internal **/\n  get<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): T[K1][K2];\n  /** @internal **/\n  get<K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n    k1: K1,\n    k2: K2,\n    k3: K3\n  ): T[K1][K2][K3];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): T[K1][K2][K3][K4];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): T[K1][K2][K3][K4][K5];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): T[K1][K2][K3][K4][K5][K6];\n  /** @internal **/\n  get<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]>(\n    ...keys:\n      | [K1]\n      | [K1, K2]\n      | [K1, K2, K3]\n      | [K1, K2, K3, K4]\n      | [K1, K2, K3, K4, K5]\n      | [K1, K2, K3, K4, K5, K6]\n  ):\n    | T\n    | T[K1]\n    | T[K1][K2]\n    | T[K1][K2][K3]\n    | T[K1][K2][K3][K4]\n    | T[K1][K2][K3][K4][K5]\n    | T[K1][K2][K3][K4][K5][K6] {\n    const hasStateAnyKeys = Object.keys(this.accumulator.state).length > 0;\n    if (hasStateAnyKeys && !!keys && keys.length > 0) {\n      return safePluck(this.accumulator.state, keys);\n    } else {\n      return this.accumulator.state;\n    }\n  }\n\n  /**\n   * @description\n   * Manipulate one or many properties of the state by providing a `Partial<T>` state or a `ProjectionFunction<T>`.\n   *\n   * @example\n   * // Update one or many properties of the state by providing a `Partial<T>`\n   *\n   * const partialState = {\n   *   foo: 'bar',\n   *   bar: 5\n   * };\n   * state.set(partialState);\n   *\n   * // Update one or many properties of the state by providing a `ProjectionFunction<T>`\n   *\n   * const reduceFn = oldState => ({\n   *   bar: oldState.bar + 5\n   * });\n   * state.set(reduceFn);\n   *\n   * @param {Partial<T>|ProjectStateFn<T>} stateOrProjectState\n   * @return void\n   */\n  set(stateOrProjectState: Partial<T> | ProjectStateFn<T>): void;\n\n  /**\n   * @description\n   * Manipulate a single property of the state by the property name and a `ProjectionFunction<T>`.\n   *\n   * @example\n   * const reduceFn = oldState => oldState.bar + 5;\n   * state.set('bar', reduceFn);\n   *\n   * @param {K} key\n   * @param {ProjectValueFn<T, K>} projectSlice\n   * @return void\n   */\n  set<K extends keyof T, O>(key: K, projectSlice: ProjectValueFn<T, K>): void;\n  /**\n   * @internal\n   */\n  set<K extends keyof T>(\n    keyOrStateOrProjectState: Partial<T> | ProjectStateFn<T> | K,\n    stateOrSliceProjectFn?: ProjectValueFn<T, K>\n  ): void {\n    if (\n      typeof keyOrStateOrProjectState === 'object' &&\n      stateOrSliceProjectFn === undefined\n    ) {\n      this.accumulator.nextSlice(keyOrStateOrProjectState);\n      return;\n    }\n\n    if (\n      typeof keyOrStateOrProjectState === 'function' &&\n      stateOrSliceProjectFn === undefined\n    ) {\n      this.accumulator.nextSlice(\n        keyOrStateOrProjectState(this.accumulator.state)\n      );\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrStateOrProjectState) &&\n      typeof stateOrSliceProjectFn === 'function'\n    ) {\n      const state: Partial<T> = {};\n      state[keyOrStateOrProjectState] = stateOrSliceProjectFn(\n        this.accumulator.state\n      );\n      this.accumulator.nextSlice(state);\n      return;\n    }\n\n    throw new Error('wrong params passed to set');\n  }\n\n  /**\n   * @description\n   * Connect an `Observable<Partial<T>>` to the state `T`.\n   * Any change emitted by the source will get merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const sliceToAdd$ = interval(250).pipe(mapTo({\n   *   bar: 5,\n   *   foo: 'foo'\n   * });\n   * state.connect(sliceToAdd$);\n   * // every 250ms the properties bar and foo get updated due to the emission of sliceToAdd$\n   *\n   * // Additionally you can provide a `projectionFunction` to access the current state object and do custom mappings.\n   *\n   * const sliceToAdd$ = interval(250).pipe(mapTo({\n   *   bar: 5,\n   *   foo: 'foo'\n   * });\n   * state.connect(sliceToAdd$, (state, slice) => state.bar += slice.bar);\n   * // every 250ms the properties bar and foo get updated due to the emission of sliceToAdd$. Bar will increase by\n   * // 5 due to the projectionFunction\n   */\n  connect(inputOrSlice$: Observable<Partial<T>>): void;\n\n  /**\n   * @description\n   * Connect an `Observable<V>` to the state `T`.\n   * Any change emitted by the source will get forwarded to to project function and merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * You have to provide a `projectionFunction` to access the current state object and do custom mappings.\n   *\n   * @example\n   * const sliceToAdd$ = interval(250);\n   * state.connect(sliceToAdd$, (s, v) => ({bar: v}));\n   * // every 250ms the property bar get updated due to the emission of sliceToAdd$\n   *\n   */\n  connect<V>(\n    inputOrSlice$: Observable<V>,\n    projectFn: ProjectStateReducer<T, V>\n  ): void;\n  /**\n   *\n   * @description\n   * Connect an `Observable<T[K]>` source to a specific property `K` in the state `T`. Any emitted change will update\n   * this\n   * specific property in the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const myTimer$ = interval(250);\n   * state.connect('timer', myTimer$);\n   * // every 250ms the property timer will get updated\n   */\n  connect<K extends keyof T>(key: K, slice$: Observable<T[K]>): void;\n  /**\n   *\n   * @description\n   * Connect an `Observable<V>` source to a specific property in the state. Additionally you can provide a\n   * `projectionFunction` to access the current state object on every emission of your connected `Observable`.\n   * Any change emitted by the source will get merged into the state.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * const myTimer$ = interval(250);\n   * state.connect('timer', myTimer$, (state, timerChange) => state.timer += timerChange);\n   * // every 250ms the property timer will get updated\n   */\n  connect<K extends keyof T, V>(\n    key: K,\n    input$: Observable<V>,\n    projectSliceFn: ProjectValueReducer<T, K, V>\n  ): void;\n  /**\n   * @internal\n   */\n  connect<K extends keyof T, V>(\n    keyOrInputOrSlice$: K | Observable<Partial<T> | V>,\n    projectOrSlices$?: ProjectStateReducer<T, V> | Observable<T[K]>,\n    projectValueFn?: ProjectValueReducer<T, K, V>\n  ): void {\n    if (\n      isObservable<Partial<T>>(keyOrInputOrSlice$) &&\n      projectOrSlices$ === undefined &&\n      projectValueFn === undefined\n    ) {\n      this.accumulator.nextSliceObservable(keyOrInputOrSlice$);\n      return;\n    }\n\n    if (\n      isObservable<V>(keyOrInputOrSlice$) &&\n      typeof projectOrSlices$ === 'function' &&\n      !isObservable<T[K]>(projectOrSlices$) &&\n      projectValueFn === undefined\n    ) {\n      const project = projectOrSlices$;\n      const slice$ = keyOrInputOrSlice$.pipe(\n        map((v) => project(this.get(), v))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrInputOrSlice$) &&\n      isObservable<T[K]>(projectOrSlices$) &&\n      projectValueFn === undefined\n    ) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(\n        map((value) => ({ ...{}, [key]: value }))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    if (\n      isKeyOf<T>(keyOrInputOrSlice$) &&\n      isObservable<V>(projectOrSlices$) &&\n      typeof projectValueFn === 'function'\n    ) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(\n        map((value) => ({ ...{}, [key]: projectValueFn(this.get(), value) }))\n      );\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n\n    throw new Error('wrong params passed to connect');\n  }\n\n  /**\n   * @description\n   * returns the state as cached and distinct `Observable<T>`. This way you don't have to think about **late\n   * subscribers**,\n   * **multiple subscribers** or **multiple emissions** of the same value\n   *\n   * @example\n   * const state$ = state.select();\n   * state$.subscribe(state => doStuff(state));\n   *\n   * @returns Observable<T>\n   */\n  select(): Observable<T>;\n\n  /**\n   * @description\n   * returns the state as cached and distinct `Observable<A>`. Accepts arbitrary\n   * [rxjs operators](https://rxjs-dev.firebaseapp.com/guide/operators) to enrich the selection with reactive composition.\n   *\n   * @example\n   * const profilePicture$ = state.select(\n   *  pluck('profilePicture'),\n   *  switchMap(profilePicture => mapImageAsync(profilePicture))\n   * );\n   * @param op { OperatorFunction<T, A> }\n   * @returns Observable<A>\n   */\n  select<A = T>(op: OperatorFunction<T, A>): Observable<A>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>\n  ): Observable<B>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>\n  ): Observable<C>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B, D = C>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  /**\n   * @internal\n   */\n  select<A = T, B = A, C = B, D = C, E = D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  /**\n   * @description\n   * Access a single property of the state by providing keys.\n   * Returns a single property of the state as cached and distinct `Observable<T[K1]>`.\n   *\n   * @example\n   * // Access a single property\n   *\n   * const bar$ = state.select('bar');\n   *\n   * // Access a nested property\n   *\n   * const foo$ = state.select('bar', 'foo');\n   *\n   * @return Observable<T[K1]>\n   */\n  select<K1 extends keyof T>(k1: K1): Observable<T[K1]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T, K2 extends keyof T[K1]>(\n    k1: K1,\n    k2: K2\n  ): Observable<T[K1][K2]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): Observable<T[K1][K2][K3]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): Observable<T[K1][K2][K3][K4]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): Observable<T[K1][K2][K3][K4][K5]>;\n  /**\n   * @internal\n   */\n  select<K1 extends keyof T,\n    K2 extends keyof T[K1],\n    K3 extends keyof T[K1][K2],\n    K4 extends keyof T[K1][K2][K3],\n    K5 extends keyof T[K1][K2][K3][K4],\n    K6 extends keyof T[K1][K2][K3][K4][K5]>(\n    k1: K1,\n    k2: K2,\n    k3: K3,\n    k4: K4,\n    k5: K5,\n    k6: K6\n  ): Observable<T[K1][K2][K3][K4][K5][K6]>;\n  /**\n   * @internal\n   */\n  select<R>(\n    ...opOrMapFn: OperatorFunction<T, R>[] | string[]\n  ): Observable<T | R> {\n    if (!opOrMapFn || opOrMapFn.length === 0) {\n      return this.accumulator.state$.pipe(stateful());\n    } else if (isStringArrayGuard(opOrMapFn)) {\n      return this.accumulator.state$.pipe(stateful(pluck(...opOrMapFn)));\n    } else if (isOperateFnArrayGuard(opOrMapFn)) {\n      return this.accumulator.state$.pipe(stateful(pipeFromArray(opOrMapFn)));\n    }\n    throw new Error('wrong params passed to select');\n  }\n\n  /**\n   * @description\n   * Manages side-effects of your state. Provide an `Observable<any>` **side-effect** and an optional\n   * `sideEffectFunction`.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * // Directly pass an observable side-effect\n   * const localStorageEffect$ = changes$.pipe(\n   *  tap(changes => storeChanges(changes))\n   * );\n   * state.hold(localStorageEffect$);\n   *\n   * // Pass an additional `sideEffectFunction`\n   *\n   * const localStorageEffectFn = changes => storeChanges(changes);\n   * state.hold(changes$, localStorageEffectFn);\n   *\n   * @param {Observable<S>} obsOrObsWithSideEffect\n   * @param {function} [sideEffectFn]\n   */\n  hold<S>(\n    obsOrObsWithSideEffect: Observable<S>,\n    sideEffectFn?: (arg: S) => void\n  ): void {\n    if (typeof sideEffectFn === 'function') {\n      this.effectObservable.nextEffectObservable(\n        obsOrObsWithSideEffect.pipe(tap(sideEffectFn))\n      );\n      return;\n    }\n    this.effectObservable.nextEffectObservable(obsOrObsWithSideEffect);\n  }\n\n  /**\n   * @internal\n   */\n  subscribe(): Unsubscribable {\n    const subscription = new Subscription();\n    subscription.add(this.accumulator.subscribe());\n    subscription.add(this.effectObservable.subscribe());\n    return subscription;\n  }\n}\n","export const MENU_ITEMS = [\n  {\n    label: 'comparison',\n    link: 'comparison'\n  },\n  {\n    label: 'router',\n    link: 'routing'\n  }\n];\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { isDefined } from '../../core';\nimport { valuesComparer } from '../_internals/valuesComparer.util';\n\n/**\n * @description\n * Removes one or multiple items from an array T[].\n * For comparison you can provide a key, an array of keys or a custom comparison function that should return true if items match.\n * If no comparison data is provided, an equality check is used by default.\n * Returns a shallow copy of the updated array T[], and does not mutate the original one.\n *\n * @example\n * // Removing value without comparison data\n *\n * const items = [1,2,3,4,5];\n *\n * const updatedItems = remove(items, [1,2,3]);\n *\n * // updatedItems will be: [4,5];\n *\n * @example\n * // Removing values with comparison function\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const nonExistingCreatures = [{id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const realCreatures = remove(creatures, nonExistingCreatures, (a, b) => a.id === b.id);\n *\n * // realCreatures will be: [{id: 1, type: 'cat'}];\n *\n * @example\n * // Removing values with key\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const nonExistingCreatures = [{id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const realCreatures = remove(creatures, nonExistingCreatures, 'id');\n *\n * // realCreatures will be: [{id: 1, type: 'cat'}];\n *\n * @example\n * // Removing values with array of keys\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const nonExistingCreatures = [{id: 2, type: 'unicorn'}, {id: 3, type: 'kobold'}];\n *\n * const realCreatures = remove(creatures, nonExistingCreatures, ['id', 'type']);\n *\n * // realCreatures will be: [{id: 1, type: 'cat'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly removeCreature$ = new Subject<Creature>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.removeCreature$,\n *        ({ creatures }, creatureToRemove) => {\n *            return remove(creatures, creatureToRemove, (a, b) => a.id === b.id);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeCreature(creatureToRemove: Creature): void {\n *        this.state.set({ creatures: remove(this.state.get().creatures, creatureToRemove, (a, b) => a.id === b.id)});\n *    }\n * }\n *\n * @returns T[]\n *\n * @docsPage remove\n * @docsCategory transformation-helpers\n */\nexport function remove<T>(\n  source: T[],\n  scrap: Partial<T>[] | Partial<T>,\n  compare?: ComparableData<T>\n): T[] {\n  const scrapAsArray = isDefined(scrap)\n    ? Array.isArray(scrap)\n      ? scrap\n      : [scrap]\n    : [];\n  const invalidInput = !Array.isArray(source);\n\n  if (invalidInput) {\n    console.warn(`Remove: original value (${source}) is not an array`);\n    return source;\n  }\n\n  return source.filter((existingItem) => {\n    return !scrapAsArray.some((item) =>\n      valuesComparer(item as T, existingItem, compare)\n    );\n  });\n}\n","export * from './deleteProp';\nexport * from './dictionaryToArray';\nexport * from './patch';\nexport * from './setProp';\nexport * from './toggle';\n","import { MENU_ITEMS as RX_STATE_MENU_ITEMS } from './state/rx-state.menu';\nimport { MENU_ITEMS as STRUCTURAL_DIRECTIVES } from './structural-directives/structural-directives.menu';\nimport { MENU_ITEMS as DIFFER_MENU_ITEMS } from './differ/differ.menu';\n\nexport const EXPERIMENTS_MENU = [\n  {\n    label: 'Differ',\n    link: 'differ',\n    children: DIFFER_MENU_ITEMS\n  },\n  {\n    link: 'structural-directives',\n    label: 'Structural Directives',\n    children: STRUCTURAL_DIRECTIVES\n  },\n  ...RX_STATE_MENU_ITEMS\n];\n","import { ChangeDetectionStrategy, InjectionToken } from '@angular/core';\n\nexport interface EnvironmentSettings {\n  production: boolean;\n  changeDetection: ChangeDetectionStrategy\n}\nexport const ENVIRONMENT_SETTINGS = new InjectionToken<EnvironmentSettings>('ENVIRONMENT_SETTINGS');\n","import { noop, UnaryFunction } from 'rxjs';\n\nexport function pipeFromArray<T, R>(\n  fns: Array<UnaryFunction<T, R>>\n): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce(\n      (prev: any, fn: UnaryFunction<T, R>) => fn(prev),\n      input as any\n    );\n  };\n}\n","import { RXLET_VS_PUSH_MENU_ITEMS } from './rx-let-vs-push/rx-let-vs-push.menu';\nimport { ALPHAS_COMPARE_MENU_ITEMS } from './alphas-compare/alphas-compare.menu';\n\nexport const MENU_ITEMS = [\n  ...RXLET_VS_PUSH_MENU_ITEMS,\n  ...ALPHAS_COMPARE_MENU_ITEMS,\n  {\n    label: 'Nested Component Structure',\n    link: 'nested-component-structure'\n  },\n  {\n    label: 'Sibling Component Structure',\n    link: 'sibling-component-structure'\n  }\n];\n","export * from './lib/index';\n","export const MENU_ITEMS = [\n  {\n    link: 'rx-base-state',\n    label: 'State Problems',\n    children: [\n      {\n        link: 'subscription',\n        label: 'Subscription',\n      },\n      {\n        link: 'composition',\n        label: 'Composition',\n      },\n      {\n        link: 'selections',\n        label: 'Selections',\n      },\n      {\n        link: 'connect',\n        label: 'Connecting',\n      },\n      {\n        link: 'selectslice',\n        label: 'SelectSlice',\n      },\n    ],\n  },\n];\n","import { ComparableData } from '../interfaces/comparable-data-type';\nimport { isKeyOf } from '../../core';\n\nexport function valuesComparer<T>(\n  original: T,\n  incoming: T,\n  compare?: ComparableData<T>\n): boolean {\n  const defaultCompare = (a: T, b: T) => a === b;\n\n  if (isKeyOf<T>(compare)) {\n    return original[compare] === incoming[compare];\n  }\n\n  if (Array.isArray(compare)) {\n    const sanitizedKeys = compare.filter((k) => isKeyOf<T>(k));\n    return !!sanitizedKeys.length\n      ? sanitizedKeys.every((k) => original[k] === incoming[k])\n      : defaultCompare(original, incoming);\n  }\n\n  return (compare || defaultCompare)(original, incoming);\n}\n","import { TUTORIAL_BASICS_MENU } from './basics/tutorial-basics.menu';\n\nexport const TUTORIALS_MENU = [\n  {\n    label: 'Basics',\n    link: 'basics',\n    children: TUTORIAL_BASICS_MENU,\n  }\n];\n","import { OnlyKeysOfSpecificType } from '../interfaces/only-keys-of-specific-type';\nimport { isDefined, isKeyOf, isObjectGuard } from '../../core';\n\n/**\n * @description\n * Toggles a boolean property in the object.\n * Accepts object of type T and key value of which is boolean.\n * Toggles the property and returns a shallow copy of an object, while not mutating the original one.\n *\n * @example\n *\n * const state = {items: [1,2,3], loading: true};\n *\n * const updatedState = toggle(state, 'loading');\n *\n * // updatedState will be:\n * // {items: [1,2,3], loading: false};\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *    readonly loadingChange$ = new Subject();\n *\n *    constructor(\n *      private state: RxState<ComponentState>\n *    ) {\n *      // Reactive implementation\n *      state.connect(\n *        this.api.loadingChange$,\n *        (state, _) => {\n *            return toggle(state, 'isLoading');\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    toggleLoading(): void {\n *      this.set(toggle(state, 'isLoading'));\n *    }\n * }\n *\n * @returns T\n *\n * @docsPage toggle\n * @docsCategory transformation-helpers\n */\n\nexport function toggle<T extends object>(\n  object: T,\n  key: OnlyKeysOfSpecificType<T, boolean>\n): T {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf<T>(key);\n  const initialObject = objectIsObject ? object : ({} as T);\n\n  if (!objectIsObject) {\n    console.warn(`Toggle: original value (${object}) is not an object.`);\n  }\n\n  if (!keyIsValid) {\n    console.warn(`Toggle: key argument (${key}) is invalid.`);\n  }\n\n  if (keyIsValid && typeof initialObject[key] !== 'boolean') {\n    console.warn(`Toggle: value of the key (${key}) is not a boolean.`);\n  }\n\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n\n  if (\n    keyIsValid &&\n    (typeof initialObject[key] === 'boolean' ||\n      !initialObject.hasOwnProperty(key))\n  ) {\n    return { ...initialObject, [key]: !initialObject[key] };\n  }\n\n  return { ...initialObject };\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[rxaAppShellSideNavItem]',\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    class:\n      'app-shell-sidenav-item',\n  },\n})\nexport class AppShellSideNavItemDirective {\n  @Input('rxaAppShellSideNavItemLevel') level = 0;\n\n  @HostBinding('class.app-shell-sidenav-item-level-1') get level1() { return this.level === 1};\n  @HostBinding('class.app-shell-sidenav-item-level-2') get level2() { return this.level === 2};\n  @HostBinding('class.app-shell-sidenav-item-level-3') get level3() { return this.level === 3};\n\n  constructor() {}\n}\n","import { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum Viewport {\n  mobile = 'mobile',\n  tablet = 'tablet',\n  desktop = 'desktop',\n}\n\ninterface ViewportServiceState {\n  viewport: Viewport;\n  isMobile: boolean;\n  isDesktop: boolean;\n  isTablet: boolean;\n  isHandset: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewportService implements OnDestroy {\n  private readonly state = new RxState<ViewportServiceState>();\n\n  readonly viewport$ = this.state.select('viewport');\n  readonly isMobile$ = this.state.select('isMobile');\n  readonly isTablet$ = this.state.select('isTablet');\n  readonly isDesktop$ = this.state.select('isDesktop');\n  readonly isHandset$ = this.state.select('isHandset');\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n    const viewport$ = this.breakpointObserver\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ])\n      .pipe(\n        map((result: BreakpointState) => {\n          if (result.breakpoints[Breakpoints.XSmall]) {\n            return Viewport.mobile;\n          }\n          if (result.breakpoints[Breakpoints.Small]) {\n            return Viewport.tablet;\n          }\n          return Viewport.desktop;\n        }),\n        distinctUntilChanged<Viewport>(),\n      );\n    this.state.connect(viewport$, (oldState, viewportChange) => ({\n      viewport: viewportChange,\n      isHandset:\n        viewportChange === 'mobile' || viewportChange === 'tablet',\n      isMobile: viewportChange === 'mobile',\n      isTablet: viewportChange === 'tablet',\n      isDesktop: viewportChange === 'desktop',\n    }));\n  }\n\n  ngOnDestroy() {\n    this.state.ngOnDestroy();\n  }\n}\n","export const RENDERCALLBACK_MENU = [\n  {\n    link: 'render-callback',\n    label: 'Render Callback',\n    children: [\n      // 01. One single-shot observable bound by one push as template expression\n      {\n        link: 'render-callback-01',\n        label: 'Render Callback 01',\n      },\n      {\n        link: 'render-callback-02',\n        label: 'Render Callback 02',\n      },\n      {\n        link: 'render-callback-03',\n        label: 'Render Callback 03',\n      },\n      {\n        link: 'render-callback-04',\n        label: 'Render Callback 04',\n      }\n    ],\n  },\n];\n","export { createSideEffectObservable, createAccumulationObservable } from './cdk';\nexport { RxState } from './rx-state.service';\nexport {\n  select,\n  stateful,\n  distinctUntilSomeChanged,\n  selectSlice\n} from './rxjs/operators';\nexport {\n  insert,\n  remove,\n  toDictionary,\n  update\n} from './transformation-helpers/array/index';\nexport {\n  setProp,\n  patch,\n  deleteProp,\n  dictionaryToArray,\n  toggle\n} from './transformation-helpers/object/index';\nexport { KeyCompareMap, CompareFn } from './rxjs/interfaces';\n","import { MENU_ITEMS as PUSH_MENU_ITEMS } from './push/push.menu';\nimport { MENU_ITEMS as RX_LET_MENU_ITEMS } from './rx-let/rx-let.menu';\nimport { MENU_ITEMS as STRATEGIES_MENU_ITEMS } from './strategies/strategies.menu';\nimport { MENU_ITEMS as UNPATCH_MENU_ITEMS } from './unpatch/unpatch.menu';\nimport { MENU_ITEMS as VIEWPORT_PRIO_MENU_ITEMS } from './viewport-prio/viewport-prio.menu';\n\nexport const TEMPLATE_MENU = [\n  {\n    label: 'Strategies',\n    link: 'strategies',\n    children: STRATEGIES_MENU_ITEMS,\n  },\n  {\n    label: 'Push',\n    link: 'push',\n    children: PUSH_MENU_ITEMS,\n  },\n  {\n    label: '*rxLet',\n    link: 'rx-let',\n    children: RX_LET_MENU_ITEMS,\n  },\n  {\n    label: 'Unpatch',\n    link: 'unpatch',\n    children: UNPATCH_MENU_ITEMS,\n  },\n  {\n    label: 'ViewPort Prio',\n    link: 'view-port-prio',\n    children: VIEWPORT_PRIO_MENU_ITEMS,\n  }\n];\n","import { isDefined } from '../../core';\n\n/**\n * @description\n * Inserts one or multiple items to an array T[].\n * Returns a shallow copy of the updated array T[], and does not mutate the original one.\n *\n * @example\n * // Inserting single value\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const updatedCreatures = insert(creatures, {id: 3, type: 'parrot'});\n *\n * // updatedCreatures will be:\n * //  [{id: 1, type: 'cat'}, {id: 2, type: 'dog}, {id: 3, type: 'parrot}];\n *\n * @example\n * // Inserting multiple values\n *\n * const creatures = [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}];\n *\n * const updatedCreatures = insert(creatures, [{id: 3, type: 'parrot'}, {id: 4, type: 'hamster'}]);\n *\n * // updatedCreatures will be:\n * // [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}, {id: 4, type: 'hamster'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *\n *    readonly insertCreature$ = new Subject<void>();\n *\n *    constructor(private state: RxState<ComponentState>) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.insertCreature$,\n *        ({ creatures }) => {\n *            const creatureToAdd = {id: generateId(), name: 'newCreature', type: 'dinosaur' };\n *            return insert(creatures, creatureToAdd);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    insertCeature(): void {\n *        const creatureToAdd = {id: generateId(), name: 'newCreature', type: 'dinosaur' };\n *        this.state.set({ creatures: insert(this.state.get().creatures, creatureToAdd)});\n *    }\n * }\n *\n *\n * @returns T[]\n *\n * @docsPage insert\n * @docsCategory transformation-helpers\n */\nexport function insert<T>(source: T[], updates: T | T[]): T[] {\n  const updatesDefined = isDefined(updates);\n  const sourceIsArray = Array.isArray(source);\n  const invalidInput = !sourceIsArray && !updatesDefined;\n\n  if (!sourceIsArray && isDefined(source)) {\n    console.warn(`Insert: Original value (${source}) is not an array.`);\n  }\n\n  if (invalidInput) {\n    return source;\n  }\n\n  return [\n    ...(sourceIsArray ? source : []),\n    ...(updatesDefined ? (Array.isArray(updates) ? updates : [updates]) : [])\n  ];\n}\n","import { KeyCompareMap } from '../interfaces';\nimport { Observable, OperatorFunction } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { distinctUntilSomeChanged } from './distinctUntilSomeChanged';\n\n/**\n * @description\n *\n * Returns an Observable that emits only the provided `keys` emitted by the source Observable. Each key will get\n * filtered to only emit _defined_ values as well as checked for distinct emissions.\n * Comparison will be done for each set key in the `keys` array.\n *\n * `selectSlice` will only emit _valid_ selections. A selection is _valid_ if every\n * selected key exists and is defined in the source Observable. This ensures that the `selectSlice`\n * operator will always return a complete slice with all values defined.\n *\n * You can fine grain your distinct checks by providing a `KeyCompareMap` with those keys you want to compute\n * explicitly different\n *\n * @example\n *\n * // An example with a custom comparison applied to each key\n * import { of } from 'rxjs';\n * import { selectSlice } from 'rx-angular/state';\n *\n *\n * const state$: Observable<MyState> = of(\n *  { title: 'myTitle', panelOpen: true},\n *  { title: 'myTitle2', panelOpen: true},\n *  { title: 'newTitle', panelOpen: true},\n *  { title: 'newTitle', panelOpen: false}\n * )\n * .pipe(\n *     selectSlice(['title', 'panelOpen']),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * //  { title: 'myTitle', panelOpen: true },\n * //  { title: 'myTitle2', panelOpen: true },\n * //  { title: 'newTitle', panelOpen: true },\n * //  { title: 'newTitle', panelOpen: false }\n *\n * @example\n *\n * import { of, Observable } from 'rxjs';\n * import { tap } from 'rxjs/operators';\n * import { selectSlice } from 'rx-angular/state';\n *\n * interface MyState {\n *    title: string;\n *    items: string[];\n *    panelOpen: boolean;\n * }\n * // Select items and title.\n * // apply custom compare logic for the items array\n * const customComparison: KeyCompareMap<MyState> = {\n *   items: (oldItems, newItems) => compareItems(oldItems, newItems)\n * };\n * const state$: Observable<MyState> = of(\n * { title: 'myTitle', items: ['foo', 'bar'], panelOpen: true },\n * { title: 'myTitle', items: ['foo', 'bar'], panelOpen: false },\n * { title: 'nextTitle', items: ['foo', 'baR'], panelOpen: true },\n * { title: 'nextTitle', items: ['fooRz', 'boo'], panelOpen: false },\n * );\n * const slice$ = state$.pipe(selectSlice(['title', 'items'], customComparison), tap(console.log)).subscribe();\n *\n * // displays:\n * // { title: 'myTitle', items: ['foo', 'bar'] }\n * // { title: 'nextTitle', items: ['foo', 'baR'] }\n * // { title: 'nextTitle', items: ['fooRz', 'boo'] }\n *\n * @param {(K)[]} keys - the array of keys which should be selected\n * @param {KeyCompareMap<{ [P in K]: T[P] }>} [keyCompareMap] Optional KeyCompareMap to provide custom compare logic\n * for some the keys\n * @docsPage selectSlice\n * @docsCategory operators\n */\nexport function selectSlice<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<{ [P in K]: T[P] }>\n): OperatorFunction<T, PickSlice<T, K>> {\n  return (o$: Observable<T>): Observable<PickSlice<T, K>> =>\n    o$.pipe(\n      filter((state) => state !== undefined),\n      map((state) => {\n        // forward null\n        if (state === null) {\n          return null;\n        }\n        // an array of all keys which exist and are _defined_ in the state object\n        const definedKeys = keys\n          // filter out undefined properties e. g. {}, { str: undefined }\n          .filter((k) => state.hasOwnProperty(k) && state[k] !== undefined);\n\n        // we want to ensure to only emit _valid_ selections\n        // a selection is _valid_ if every selected key exists and has a value:\n\n        // {} => selectSlice(['foo']) => no emission\n        // {str: 'test'} => selectSlice([]) => no emission\n        // {str: 'test'} => selectSlice(['notPresent']) => no emission\n        // {str: 'test'} => state.select(selectSlice([])) => no emission\n        // {str: 'test'} => state.select(selectSlice(['notPresent'])) => no emission\n        // {str: undefined} => state.select(selectSlice(['str'])) => no emission\n        // {str: 'test', foo: undefined } => state.select(selectSlice(['foo'])) => no emission\n        if (definedKeys.length < keys.length) {\n          return undefined;\n        }\n\n        // create the selected slice\n        return definedKeys\n          .reduce((vm, key) => {\n            vm[key] = state[key];\n            return vm;\n          }, {} as PickSlice<T, K>);\n      }),\n      filter((v) => v !== undefined),\n      distinctUntilSomeChanged(keys, keyCompareMap)\n    );\n}\n\ntype PickSlice<T extends object, K extends keyof T> = Pick<T,\n  { [I in K]: I }[K]>;\n","export const ALPHAS_COMPARE_MENU_ITEMS = [\n  {\n    link: 'alphas-compare',\n    label: 'Alpha 0 vs Alpha 1',\n    children: [\n      {\n        link: 'list-toggle',\n        label: 'List toggle',\n      },\n    ],\n  },\n];\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from '../features/home/home.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'fundamentals',\n    loadChildren: () =>\n      import('../features/fundamentals/fundamentals.module').then(\n        (m) => m.FundamentalsModule\n      )\n  },\n  {\n    path: 'template',\n    loadChildren: () =>\n      import('../features/template/template-shell.module').then(\n        (m) => m.TemplateShellModule\n      )\n  },\n  {\n    path: 'tutorials',\n    loadChildren: () =>\n      import('../features/tutorials/tutorials-shell.module').then(\n        (m) => m.TutorialsShellModule\n      )\n  },\n  {\n    path: 'integrations',\n    loadChildren: () =>\n      import('../features/integrations/integrations-shell.module').then(\n        (m) => m.IntegrationsShellModule\n      )\n  },\n  {\n    path: 'experiments',\n    loadChildren: () =>\n      import('../features/experiments/experiments-shell.module').then(\n        (m) => m.ExperimentsShellModule\n      )\n  },\n  {\n    path: 'performance',\n    loadChildren: () =>\n      import('../features/performance/performance-shell.module').then(\n        (m) => m.PerformanceShellModule\n      )\n  }\n];\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { CompareFn, KeyCompareMap } from '../interfaces';\nimport { safePluck } from '../../core/utils/safe-pluck';\n\n/**\n * @internal\n */\nfunction defaultCompare<T>(oldVal: T, newVal: T): boolean {\n  return oldVal === newVal;\n}\n\n/**\n * @description\n *\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from\n * the previous item. Comparison will be done for each set key in the `keys` array.\n *\n * You can fine grain your distinct checks by providing a `KeyCompareMap` with those keys you want to compute\n * explicitly different\n *\n * The name `distinctUntilSomeChanged` was picked since it internally iterates over the `keys` and utilizes the\n * [some](https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/some) method in order to\n * compute if values are distinct or not.\n *\n * @example\n *\n * import { of } from 'rxjs';\n * import { distinctUntilSomeChanged } from 'rx-angular/state';\n *\n * interface Person {\n *    age: number;\n *    name: string;\n * }\n *\n * of(\n *   { age: 4, name: 'Hans'},\n *   { age: 7, name: 'Sophie'},\n *   { age: 5, name: 'Han Solo'},\n *   { age: 5, name: 'HanSophie'},\n * ).pipe(\n *   distinctUntilSomeChanged(['age', 'name']),\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Hans'}\n * // { age: 7, name: 'Sophie'}\n * // { age: 5, name: 'Han Solo'}\n * // { age: 5, name: 'HanSophie'}\n *\n * @example\n * // An example with `KeyCompareMap`\n * import { of } from 'rxjs';\n * import { distinctUntilSomeChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number;\n *     name: string;\n *  }\n * const customComparison: KeyCompareMap<Person> = {\n *   name: (oldName, newName) => oldName.substring(0, 2) === newName.substring(0, 2)\n * };\n *\n * of(\n *     { age: 4, name: 'Hans'},\n *     { age: 7, name: 'Sophie'},\n *     { age: 5, name: 'Han Solo'},\n *     { age: 5, name: 'HanSophie'},\n *   ).pipe(\n *     distinctUntilSomeChanged(['age', 'name'], customComparison),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Hans' }\n * // { age: 7, name: 'Sophie' }\n * // { age: 5, name: 'Han Solo' }\n *\n * @param {K[]} keys String key for object property lookup on each item.\n * @param {KeyCompareMap<T>} [compare] Optional KeyCompareMap to explicitly define comparisons for some of the keys\n * @docsPage distinctUntilSomeChanged\n * @docsCategory operators\n */\nexport function distinctUntilSomeChanged<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<T>\n): MonoTypeOperatorFunction<T> {\n  // default compare function applying === to every key\n  let distinctCompare: CompareFn<T> = (oldState, newState) =>\n    keys.some(\n      (key) =>\n        !defaultCompare(safePluck(oldState, [key]), safePluck(newState, [key]))\n    );\n\n  // generate compare function respecting every case of provided keyCompareMap\n  if (keyCompareMap !== undefined) {\n    const compare = (key: K) => {\n      return keyCompareMap.hasOwnProperty(key) &&\n      keyCompareMap[key] !== undefined\n        ? (keyCompareMap[key] as CompareFn<T[K]>)\n        : defaultCompare;\n    };\n    distinctCompare = (oldState, newState) => {\n      return keys.some(\n        (key) =>\n          !compare(key)(safePluck(oldState, [key]), safePluck(newState, [key]))\n      );\n    };\n  }\n  return distinctUntilChanged((oldV, newV) => !distinctCompare(oldV, newV));\n}\n","import { MonoTypeOperatorFunction, Observable, OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, filter, shareReplay } from 'rxjs/operators';\nimport { isOperateFnArrayGuard, pipeFromArray } from '../../core/utils';\n\n/**\n * @description\n *\n * As the name `stateful` implies this operator is useful when you process an Observable which maintains state.\n *\n * Maintaining state as an `Observable` source comes with a handful of repetitive as well as use case specific tasks.\n *\n * It acts like the Observables `pipe` method.\n * It accepts RxJS operators and composes them like `Observable#pipe` and the standalone `pipe` method.\n *\n * Furthermore, it takes care of the above mentioned repetitive tasks as listed below.\n *\n * You will always (aka repetitive) want to ensure that:\n * - only distinct state changes are emitted\n * - only defined values are emitted (filter out undefined, which ensures lazy state)\n * - share and replay custom operations for multiple subscribers (saves performance)\n *\n * You will sometimes (aka situational) need:\n * - a subset of the state (derivations)\n * - compose the state with other Observables or change the Observables behaviour\n *\n *\n * @example\n * import { Observable } from 'rxjs';\n * import { map } from 'rxjs/operators';\n * import { stateful } from 'rx-angular/state';\n *\n * const state$: Observable<{ name: string; items: string[] }>;\n * const derivation$ = state$.pipe(\n *   stateful(\n *     map(state => state.list.length),\n *     filter(length => length > 3)\n *   )\n * );\n *\n * @param {OperatorFunction<T, A>} op - one or multiple passed operator comma separated\n * @return OperatorFunction<T, A>\n *\n * @docsPage stateful\n * @docsCategory operators\n */\nexport function stateful<T>(): MonoTypeOperatorFunction<T>;\n/**\n * @internal\n */\nexport function stateful<T, A>(\n  op: OperatorFunction<T, A>\n): OperatorFunction<T, A>;\n/**\n * @internal\n */\nexport function stateful<T, A, B>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>\n): OperatorFunction<T, B>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>\n): OperatorFunction<T, C>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C, D>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>\n): OperatorFunction<T, D>;\n/**\n * @internal\n */\nexport function stateful<T, A, B, C, D, E>(\n  op1: OperatorFunction<T, A>,\n  op2: OperatorFunction<A, B>,\n  op3: OperatorFunction<B, C>,\n  op4: OperatorFunction<C, D>,\n  op5: OperatorFunction<D, E>\n): OperatorFunction<T, E>;\n/**\n * @description\n *\n * As it acts like the Observables `pipe` method, it accepts one or many RxJS operators as params.\n *\n * @example\n * import { Observable } from 'rxjs';\n * import { map } from 'rxjs/operators';\n * import { stateful } from 'rx-angular/state';\n *\n * const state$: Observable<{ name: string; items: string[] }>;\n * const derivation$ = state$.pipe(\n *   stateful(\n *     map(state => state.list.length),\n *     filter(length => length > 3)\n *   )\n * );\n *\n * @param {OperatorFunction<T, A>} op - one or multiple passed operator comma separated\n *\n * @docsPage stateful\n * @docsCategory operators\n */\nexport function stateful<T, R>(\n  ...optionalDerive: OperatorFunction<T, R>[]\n): OperatorFunction<T, T | R> {\n  return (s: Observable<T>): Observable<T | R> => {\n    return s.pipe(\n      // distinct same base-state objects (e.g. a default emission of default switch cases, incorrect mutable handling\n      // of data) @TODO evaluate benefits vs. overhead\n      distinctUntilChanged(),\n      // CUSTOM LOGIC HERE\n      (o: Observable<T>): Observable<T | R> => {\n        if (isOperateFnArrayGuard(optionalDerive)) {\n          return o.pipe(pipeFromArray(optionalDerive));\n        }\n        return o;\n      },\n      // initial emissions, undefined is no base-state, pollution with skip(1)\n      filter((v) => v !== undefined),\n      // distinct same derivation value\n      distinctUntilChanged(),\n      // reuse custom operations result for multiple subscribers and reemit the last calculated value.\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  };\n}\n","export { pipeFromArray } from './pipe-from-array';\nexport {\n  isIterableGuard,\n  isOperateFnArrayGuard,\n  isPromiseGuard,\n  isStringArrayGuard,\n  isKeyOf,\n  isObjectGuard,\n  isDefined\n} from './guards';\nexport { safePluck } from './safe-pluck';\n","export const MENU_ITEMS = [\n  {\n    label: 'Basic Example',\n    link: 'basic-example'\n  }\n];\n","export * from './insert';\nexport * from './remove';\nexport * from './toDictionary';\nexport * from './update';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst compilerOptions = environment.zoneless ? {ngZone: \"noop\"} as any : undefined;\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule, compilerOptions)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import {\n  BehaviorSubject,\n  ConnectableObservable,\n  EMPTY,\n  merge,\n  Observable,\n  queueScheduler,\n  Subject,\n  Subscribable,\n  Subscription\n} from 'rxjs';\nimport {\n  catchError,\n  distinctUntilChanged,\n  mergeAll,\n  observeOn,\n  publish,\n  publishReplay,\n  scan,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\n\nexport type AccumulationFn = <T>(st: T, sl: Partial<T>) => T;\n\nconst defaultAccumulator: AccumulationFn = <T>(st: T, sl: Partial<T>): T => {\n  return { ...st, ...sl };\n};\n\ninterface Accumulator<T> extends Subscribable<T> {\n  state: T;\n  state$: Observable<T>;\n  signal$: Observable<T>;\n  nextSlice: (stateSlice: Partial<T>) => void;\n  nextSliceObservable: (state$: Observable<Partial<T>>) => void;\n  nextAccumulator: (fn: AccumulationFn) => void;\n}\n\nexport function createAccumulationObservable<T extends object>(\n  stateObservables = new Subject<Observable<Partial<T>>>(),\n  stateSlices = new Subject<Partial<T>>(),\n  accumulatorObservable = new BehaviorSubject(defaultAccumulator)\n): Accumulator<T> {\n  const signal$ = merge(\n    stateObservables.pipe(\n      distinctUntilChanged(),\n      mergeAll(),\n      observeOn(queueScheduler)\n    ),\n    stateSlices.pipe(observeOn(queueScheduler))\n  ).pipe(\n    withLatestFrom(accumulatorObservable.pipe(observeOn(queueScheduler))),\n    scan(\n      (state, [slice, stateAccumulator]) => stateAccumulator(state, slice),\n      {} as T\n    ),\n    tap(\n      (newState) => (compositionObservable.state = newState),\n      (error) => console.error(error)\n    ),\n    // @Notice We catch the error here as it get lost in between `publish` and `publishReplay`. We return empty to\n    catchError((e) => EMPTY),\n    publish()\n  );\n  const state$: Observable<T> = signal$.pipe(publishReplay(1));\n  const compositionObservable: Accumulator<T> = {\n    state: {} as T,\n    signal$,\n    state$,\n    nextSlice,\n    nextSliceObservable,\n    nextAccumulator,\n    subscribe\n  };\n\n  // ======\n\n  return compositionObservable;\n\n  // ======\n\n  function nextAccumulator(accumulatorFn: AccumulationFn): void {\n    accumulatorObservable.next(accumulatorFn);\n  }\n\n  function nextSlice(stateSlice: Partial<T>): void {\n    stateSlices.next(stateSlice);\n  }\n\n  function nextSliceObservable(stateObservable: Observable<Partial<T>>): void {\n    stateObservables.next(stateObservable);\n  }\n\n  function subscribe(): Subscription {\n    const sub = (compositionObservable.signal$ as ConnectableObservable<T>).connect();\n    sub.add(\n      (compositionObservable.state$ as ConnectableObservable<T>).connect()\n    );\n    sub.add(() => {\n      accumulatorObservable.complete();\n      stateObservables.complete();\n      stateSlices.complete();\n    });\n    return sub;\n  }\n}\n"],"sourceRoot":"webpack:///"}