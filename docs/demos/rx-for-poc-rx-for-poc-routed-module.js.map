{"version":3,"sources":["./src/app/features/experiments/structural-directives/rx-for-poc/rx-for-poc.routes.ts","./src/app/shared/debug-helper/value-provider/value/value.module.ts","./src/app/features/experiments/structural-directives/rx-for-poc/rx-for-poc.routed.module.ts","./src/app/features/experiments/structural-directives/rx-for-poc/poc5-locv.directive.ts","./src/app/features/experiments/structural-directives/rx-for-poc/rx-for-value.component.ts","./src/app/shared/utils/to-array.pipe.ts","./src/app/features/experiments/structural-directives/rx-for-poc/poc6-locv.directive.ts","./src/app/features/experiments/structural-directives/utils.ts","./src/app/features/experiments/structural-directives/rx-for-poc/poc2-for.directive.ts","./src/app/features/experiments/structural-directives/rx-for-poc/model.ts","./src/app/features/experiments/structural-directives/rx-for-poc/poc1-for.directive.ts","./src/app/shared/utils/utils.module.ts","./src/app/features/experiments/structural-directives/rx-for-poc/parent.component.ts","./src/app/features/experiments/structural-directives/rx-for-poc/poc6-locv2.directive.ts","./src/app/shared/debug-helper/value-provider/value/value.component.ts","./src/app/features/experiments/structural-directives/rx-for-poc/rx-for.directive.ts","./src/app/shared/debug-helper/work/index.ts","./src/app/features/experiments/structural-directives/rx-for-poc/rx-for-poc.module.ts"],"names":[],"mappings":"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","file":"rx-for-poc-rx-for-poc-routed-module.js","sourcesContent":["import { Routes } from '@angular/router';\nimport { RxForContainerComponent } from './parent.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: RxForContainerComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { DirtyChecksModule } from '../../dirty-checks';\nimport { ValueComponent } from './value.component';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LetModule, PushModule } from '@rx-angular/template';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst DEPRECATIONS = [ValueComponent];\n\n@NgModule({\n  declarations: [...DEPRECATIONS],\n    imports: [\n        CommonModule,\n        MatRippleModule,\n        PushModule,\n        UtilsModule,\n        LetModule,\n        MatIconModule,\n        DirtyChecksModule\n    ],\n  exports: [...DEPRECATIONS]\n})\nexport class ValueModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-for-poc.routes';\nimport { RxForPocModule } from './rx-for-poc.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(ROUTES),\n    RxForPocModule\n  ]\n})\nexport class RxForPocRoutedModule {\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchAll, tap } from 'rxjs/operators';\n\ninterface RecordViewTuple<T, U extends NgIterable<T>> {\n  record: any;\n  view: EmbeddedViewRef<Poc5Locv5ViewContext<T, U>>;\n}\n\n\nexport class Poc5Locv5ViewContext<T, U extends NgIterable<T> = NgIterable<T>> {\n\n  localVariableProjections: CustomVariablesProjectors = {};\n\n  constructor(public $implicit: T, public pocLet: U, public index: number, public count: number) {\n  }\n\n  get first(): boolean {\n    return this.index === 0;\n  }\n\n  get last(): boolean {\n    return this.index === this.count - 1;\n  }\n\n  get even(): boolean {\n    return this.index % 2 === 0;\n  }\n\n  get odd(): boolean {\n    return !this.even;\n  }\n\n  get customVariable(): unknown {\n    return Object.entries(this.localVariableProjections)\n      .reduce((acc, [name, fn]) => {\n        return { ...acc, [name]: fn(this) };\n      }, {});\n  }\n}\n\ninterface CustomVariablesProjectors {\n  [variableName: string]: (context) => unknown;\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc5LocV]'\n})\nexport class Poc5Locv5<T, U extends NgIterable<T> = NgIterable<T>> implements OnInit, OnDestroy {\n  private differ: IterableDiffer<T> | null = null;\n  private subscription: Unsubscribable = new Subscription();\n\n  observables$ = new ReplaySubject<ObservableInput<U & NgIterable<T>>>(1);\n  values: U & NgIterable<T>;\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  private _trackByFn: TrackByFunction<T>;\n\n  _localVariableProjections;\n  @Input()\n  set poc5LocVLocalVariableProjections(o: CustomVariablesProjectors) {\n    this._localVariableProjections = o;\n  }\n  @Input()\n  set poc5LocVIterableTrackBy(fn: TrackByFunction<T>) {\n    this._trackByFn = fn;\n  }\n\n  @Input()\n  set poc5LocV(potentialObservable: ObservableInput<U & NgIterable<T>> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly nextTemplateRef: TemplateRef<Poc5Locv5ViewContext<T, U>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private iterableDiffers: IterableDiffers\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.values$.pipe(\n      // the actual values arrive here\n      tap(value => {\n        // set helper variable for applyChanges method\n        this.values = value;\n        // set new differ if there is none yet\n        if (!this.differ && value) {\n          this.differ = this.iterableDiffers.find(value).create(this._trackByFn);\n        }\n      }),\n      // if there is no differ, we don't need to apply changes\n      filter(() => !!this.differ),\n      // apply differ -> return changes\n      map(value => this.differ.diff(value)),\n      // filter out no changes\n      filter(changes => !!changes)\n    )\n      .subscribe(\n        changes => {\n          this.applyChanges(changes);\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private applyChanges(changes: IterableChanges<T>) {\n    // behavior like *ngFor\n    const insertTuples: RecordViewTuple<T, U>[] = [];\n    // TODO: dig into `IterableDiffer`\n    changes.forEachOperation(\n      (\n        changeRecord: IterableChangeRecord<T>,\n        previousIndex: number | null,\n        currentIndex: number | null\n      ) => {\n        if (changeRecord.previousIndex == null) {\n          // this is basically the first run\n          // create the embedded view for each value with default values\n          const view = this.viewContainerRef.createEmbeddedView(\n            this.nextTemplateRef,\n            new Poc5Locv5ViewContext<T, U>(null, this.values, -1, -1),\n            currentIndex === null ? undefined : currentIndex\n          );\n          insertTuples.push({\n            view,\n            record: changeRecord\n          });\n\n        } else if (currentIndex == null) {\n\n          this.viewContainerRef.remove(\n            previousIndex === null ? undefined : previousIndex);\n\n        } else if (previousIndex !== null) {\n\n          const view = <EmbeddedViewRef<Poc5Locv5ViewContext<T, U>>>this.viewContainerRef.get(previousIndex);\n          this.viewContainerRef.move(view, currentIndex);\n          insertTuples.push({\n            view,\n            record: changeRecord\n          });\n        }\n      });\n\n    for (let i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let i = 0, ilen = this.viewContainerRef.length; i < ilen; i++) {\n      const viewRef = <EmbeddedViewRef<Poc5Locv5ViewContext<T, U>>>this.viewContainerRef.get(i);\n      viewRef.context.localVariableProjections = this._localVariableProjections;\n\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n      viewRef.context.pocLet = this.values;\n    }\n\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const viewRef =\n        <EmbeddedViewRef<Poc5Locv5ViewContext<T, U>>>this.viewContainerRef.get(record.currentIndex);\n      viewRef.context.$implicit = record.item;\n      viewRef.detectChanges();\n    });\n  }\n\n  private _perViewChange(\n    view: EmbeddedViewRef<Poc5Locv5ViewContext<T, U>>, record: IterableChangeRecord<T>) {\n    view.context.$implicit = record.item;\n    view.detectChanges();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\nimport { TestItem, toBoolean } from '../../../../shared/debug-helper/value-provider';\n\n@Component({\n  selector: 'rxa-rx-for-value',\n  template: `\n    <mat-icon class=\"item\" [ngClass]=\"{red:!v, green:v}\" *rxLet=\"value$; let v\">\n      {{v ? 'check' : 'highlight_off'}}</mat-icon>\n    <rxa-dirty-check></rxa-dirty-check>\n  `,\n  styles: [`\n    .item.red {\n      color: red;\n    }\n    .item.green {\n      color: green;\n    }\n    .value.number {\n    }\n    .value.string {\n    }\n    .value.object {\n    }\n    .value.array {\n    }\n  `],\n  host: {\n    class: 'd-flex justify-content-center align-items-center flex-column w-100 m-1 p-1 dh-embedded-view'\n  },\n  providers: [RxState]\n})\nexport class RxForValueComponent {\n\n  value$ = this.state.select(map(s => toBoolean(s.item.value, 0.5)));\n\n  @Input()\n  set value(o: Observable<TestItem> | TestItem) {\n    this.state.connect('item', isObservable(o) ? o : of(o));\n  }\n\n  constructor(public state: RxState<{ item: TestItem }>) { }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchAll, tap } from 'rxjs/operators';\n\ninterface RecordViewTuple<T, U extends NgIterable<T>> {\n  record: any;\n  view: EmbeddedViewRef<Poc6Locv6ViewContext<T, U>>;\n}\n\n\nexport class Poc6Locv6ViewContext<T, U extends NgIterable<T> = NgIterable<T>> {\n\n  localVariableProjections: CustomVariablesProjectors = {};\n\n  constructor(public $implicit: T, public pocLet: U, public index: number, public count: number) {\n  }\n\n  get first(): boolean {\n    return this.index === 0;\n  }\n\n  get last(): boolean {\n    return this.index === this.count - 1;\n  }\n\n  get even(): boolean {\n    return this.index % 2 === 0;\n  }\n\n  get odd(): boolean {\n    return !this.even;\n  }\n\n  get customVariable(): unknown {\n    return Object.entries(this.localVariableProjections)\n      .reduce((acc, [name, fn]) => {\n        return { ...acc, [name]: fn(this) };\n      }, {});\n  }\n}\n\ninterface CustomVariablesProjectors {\n  [variableName: string]: (context) => unknown;\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc6LocV]'\n})\nexport class Poc6Locv6Directive<T, U extends NgIterable<T> = NgIterable<T>> implements OnInit, OnDestroy {\n  private differ: IterableDiffer<T> | null = null;\n  private subscription: Unsubscribable = new Subscription();\n\n  observables$ = new ReplaySubject<ObservableInput<U & NgIterable<T>>>(1);\n  values: U & NgIterable<T>;\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll(),\n      distinctUntilChanged()\n    );\n\n  private _trackByFn: TrackByFunction<T>;\n\n  _localVariableProjections;\n  @Input()\n  set poc6LocVLocalVariableProjections(o: CustomVariablesProjectors) {\n    this._localVariableProjections = o;\n  }\n  @Input()\n  set poc6LocVIterableTrackBy(fn: TrackByFunction<T>) {\n    this._trackByFn = fn;\n  }\n\n  @Input()\n  set poc6LocV(potentialObservable: ObservableInput<U & NgIterable<T>> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly nextTemplateRef: TemplateRef<Poc6Locv6ViewContext<T, U>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private iterableDiffers: IterableDiffers\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.values$.pipe(\n      // the actual values arrive here\n      tap(value => {\n        // set helper variable for applyChanges method\n        this.values = value;\n        // set new differ if there is none yet\n        if (!this.differ && value) {\n          this.differ = this.iterableDiffers.find(value).create(this._trackByFn);\n        }\n      }),\n      // if there is no differ, we don't need to apply changes\n      filter(() => !!this.differ),\n      // apply differ -> return changes\n      map(value => this.differ.diff(value)),\n      // filter out no changes\n      filter(changes => !!changes)\n    )\n      .subscribe(\n        changes => {\n          this.applyChanges(changes);\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private applyChanges(changes: IterableChanges<T>) {\n    // behavior like *ngFor\n    const insertTuples: RecordViewTuple<T, U>[] = [];\n    // TODO: dig into `IterableDiffer`\n    changes.forEachOperation(\n      (\n        changeRecord: IterableChangeRecord<T>,\n        previousIndex: number | null,\n        currentIndex: number | null\n      ) => {\n        if (changeRecord.previousIndex == null) {\n          // this is basically the first run\n          // create the embedded view for each value with default values\n          const view = this.viewContainerRef.createEmbeddedView(\n            this.nextTemplateRef,\n            new Poc6Locv6ViewContext<T, U>(null, this.values, -1, -1),\n            currentIndex === null ? undefined : currentIndex\n          );\n          insertTuples.push({\n            view,\n            record: changeRecord\n          });\n\n        } else if (currentIndex == null) {\n\n          this.viewContainerRef.remove(\n            previousIndex === null ? undefined : previousIndex);\n\n        } else if (previousIndex !== null) {\n\n          const view = <EmbeddedViewRef<Poc6Locv6ViewContext<T, U>>>this.viewContainerRef.get(previousIndex);\n          this.viewContainerRef.move(view, currentIndex);\n          insertTuples.push({\n            view,\n            record: changeRecord\n          });\n        }\n      });\n\n    for (let i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let i = 0, ilen = this.viewContainerRef.length; i < ilen; i++) {\n      const viewRef = <EmbeddedViewRef<Poc6Locv6ViewContext<T, U>>>this.viewContainerRef.get(i);\n      viewRef.context.localVariableProjections = this._localVariableProjections;\n\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n      viewRef.context.pocLet = this.values;\n    }\n\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const viewRef =\n        <EmbeddedViewRef<Poc6Locv6ViewContext<T, U>>>this.viewContainerRef.get(record.currentIndex);\n      viewRef.context.$implicit = record.item;\n      viewRef.detectChanges();\n    });\n  }\n\n  private _perViewChange(\n    view: EmbeddedViewRef<Poc6Locv6ViewContext<T, U>>, record: IterableChangeRecord<T>) {\n    view.context.$implicit = record.item;\n    view.detectChanges();\n  }\n\n}\n","import { Observable } from 'rxjs';\nimport { map, scan, share, tap } from 'rxjs/operators';\n\nconst children1 = 10;\nconst children2 = 3;\n\nexport const rand = (n: number = 2): number => {\n  // tslint:disable-next-line:no-bitwise\n  return ~~(Math.random() * n);\n};\n\nexport const randArray = (n: number = 6): any[] => {\n  return Array(n).fill(0).map((_, idx) => ({ id: idx % n, value: rand() }));\n};\n\nexport const immutableIncArr = (n: number = children1) => (o$: Observable<number>) => o$.pipe(\n  scan((a, i, idx) => {\n    const arr = randArray(children2);\n    const value = rand(100);\n    if(i === 1) {\n      a[idx % n] = { id: idx % n, value, arr };\n    } else if(i === 0) {\n      const id = rand(1);\n      a[id] = { id, value, arr };\n    } else {\n      a.splice(idx % n, 1);\n    }\n    return a;\n  }, []),\n  tap(console.log),\n  share()\n);\nexport const mutableIncArr = (n: number = children1) => {\n  return (o$: Observable<number>) => o$.pipe(\n    scan((a, i, idx) => {\n      const arr = randArray(children2);\n      a[idx % n].value = rand();\n      a[idx % n].arr = arr;\n      return a;\n    }, []),\n    share()\n  );\n}\n\nexport const immutableArr = (n: number = children1) => (o$: Observable<number>) => o$.pipe(\n  map(v => Array(n).fill(0).map((_, idx) => ({ id: idx % n, value: rand(), arr: randArray(children2) }))),\n  share()\n);\n\nexport const mutableArr = (n: number = children1) => {\n  const arr = Array(n);\n  return (o$: Observable<number>) => o$.pipe(\n    map(v => arr.forEach((i, idx) => {\n      i.value = rand();\n      i.arr = randArray(children2);\n    })),\n    share()\n  );\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Observable, ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, groupBy, map, mergeAll, mergeMap, switchAll, tap } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc2For]'\n})\nexport class Poc2ForDirective<U> implements OnInit, OnDestroy {\n  private subscription: Unsubscribable = new Subscription();\n\n  observables$ = new ReplaySubject(1);\n  embeddedViews: Map<U, { view: EmbeddedViewRef<any>, item: any }> = new Map();\n\n  values$: Observable<U[]> = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  @Input()\n  set poc2For(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  @Input()\n  poc2ForTrackBy;\n\n  @Input()\n  poc2ForDistinctBy = (a, b) => a === b;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly templateRef: TemplateRef<{ $implicit: U }>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.values$\n      .pipe(\n        tap(),\n        mergeMap(arr => arr),\n        groupBy(i => i[this.poc2ForTrackBy]),\n        map(o$ => o$.pipe(\n            distinctUntilChanged(this.poc2ForDistinctBy),\n            tap(this.updateItem)\n          )\n        ),\n        mergeAll()\n      )\n      .subscribe();\n  }\n\n  updateItem = (item): void => {\n    const key = item[this.poc2ForTrackBy];\n    let existingItem = this.embeddedViews.has(key) ? this.embeddedViews.get(key) : undefined;\n    if (!existingItem) {\n      const view = this.viewContainerRef\n        .createEmbeddedView(this.templateRef, { $implicit: item });\n      existingItem = { view, item};\n      this.embeddedViews.set(key, existingItem);\n\n    } else {\n      existingItem.view.context.$implicit = item;\n    }\n    existingItem.view.detectChanges();\n  }\n\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { EmbeddedViewRef, NgIterable } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, pluck, share, switchAll, tap } from 'rxjs/operators';\n\nexport class RxForViewContext<T extends object, U extends NgIterable<T> = NgIterable<T>, K = keyof T> {\n\n  private readonly _record = new ReplaySubject<T>(1);\n  private readonly _record$ = this._record.pipe(distinctUntilChanged(this.distinctBy), share());\n  private readonly _index = new BehaviorSubject<number>(-1);\n  private _implicit: T;\n\n\n  constructor(private _$implicit: T, public rxFor: U, private distinctBy: (a: T, b: T) => boolean = (a, b) => a === b) {\n    // tslint:disable-next-line:no-unused-expression\n    this._record.next(_$implicit);\n  }\n\n  set index(index: number | any) {\n    this._index.next(index);\n  }\n\n  set $implicit(record: T) {\n    this._implicit = record;\n    this._record.next(record);\n  }\n\n  get $implicit(): T {\n    return this._implicit;\n  }\n\n  get record$() {\n    return this._record$;\n  }\n\n  select = (props: K[]): Observable<any> => {\n    return this._record$.pipe(\n      pluck(...props as any)\n    );\n  };\n}\n\nexport interface CustomVariablesProjectors {\n  [variableName: string]: (context) => unknown;\n}\n\nexport interface RecordViewTuple<T extends object, U extends NgIterable<T>> {\n  record: any;\n  view: EmbeddedViewRef<RxForViewContext<T, U>>;\n}\n\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Observable, ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, switchAll } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc1For]'\n})\nexport class Poc1ForDirective<U> implements OnInit, OnDestroy {\n  observables$ = new ReplaySubject<Observable<U[]>>(1);\n  embeddedViews: Map<U, { view: EmbeddedViewRef<any>, item: any }> = new Map();\n\n  values$: Observable<U[]> = this.observables$.pipe(\n    distinctUntilChanged(),\n    switchAll(),\n    distinctUntilChanged()\n  );\n\n  @Input()\n  set poc1For(potentialObservable: Observable<U[]> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  @Input()\n  poc1ForTrackBy;\n\n  private subscription: Unsubscribable = new Subscription();\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly templateRef: TemplateRef<{ $implicit: U }>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.values$\n      .subscribe(\n        arr => arr.forEach(this.updateItem)\n      );\n  }\n\n  updateItem = (item, idx): void => {\n    const key = item[this.poc1ForTrackBy];\n    let existingItem = this.embeddedViews.has(key) ? this.embeddedViews.get(key) : undefined;\n    if (!existingItem) {\n      const view = this.viewContainerRef\n        .createEmbeddedView(this.templateRef, { $implicit: item }, idx);\n      existingItem = { view, item };\n      this.embeddedViews.set(key, existingItem);\n\n    } else {\n      existingItem.view.context.$implicit = item;\n    }\n    existingItem.view.detectChanges();\n  };\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { BehaviorSubject, EMPTY, interval, merge, Subject } from 'rxjs';\nimport { scan, share, switchMap } from 'rxjs/operators';\nimport { immutableArr, immutableIncArr } from '../utils';\n\n\n@Component({\n  selector: 'rxa-cd-embedded-view-parent06',\n  template: `\n    <rxa-visualizer>\n      <ng-container visualizerHeader>\n        <h2>\n          rxFor POC\n          <small>Nested Structures And Local Variables</small>\n        </h2>\n        <div>\n          <mat-button-toggle-group name=\"visibleExamples\"\n                                   aria-label=\"Visible Examples\"\n                                   [value]=\"displayStates.all\"\n                                   #group=\"matButtonToggleGroup\">\n            <mat-button-toggle [value]=\"displayStates.native\">Native</mat-button-toggle>\n            <mat-button-toggle [value]=\"displayStates.rxAngularReactive\">RxAngular *rxFor trackBy, distinctBy, select\n            </mat-button-toggle>\n            <mat-button-toggle [value]=\"displayStates.all\">All</mat-button-toggle>\n          </mat-button-toggle-group>\n          <br/>\n          <mat-form-field>\n            <label>Work Load</label>\n            <input matInput #load (input)=\"load$.next(load.value)\">\n          </mat-form-field>\n\n        </div>\n      </ng-container>\n\n      <div class=\"row w-100\">\n        <!--  -->\n        <div class=\"col-sm-6\" *ngIf=\"group.value === displayStates.native || group.value === displayStates.all\">\n          <h2>Native Angular, *ngFor trackBy</h2>\n          <p>\n            <button mat-raised-button (click)=\"changeOneClick$.next(1)\">\n              update\n            </button>\n            <button mat-raised-button (click)=\"changeAllClick$.next(10)\">\n              Change all\n            </button>\n            <button mat-raised-button (click)=\"toggleIntervalClick$.next(10)\">\n              toggel interval\n            </button>\n          </p>\n          <rxa-visualizer viewType=\"embedded-view\" *ngFor=\"let value of array$ | async;trackBy: trackById\">\n\n              <ng-container *ngFor=\"let i of value.arr; trackBy: trackById\">\n                <rxa-rx-for-value [value]=\"i\"></rxa-rx-for-value>\n              </ng-container>\n          </rxa-visualizer>\n        </div>\n        <div class=\"col-sm-6\"\n             *ngIf=\"group.value === displayStates.rxAngularReactive || group.value === displayStates.all\">\n          <h2>RxAngular, *rxFor trackBy, distinctBy, select</h2>\n          <p>\n            <button mat-raised-button [unpatch] (click)=\"changeOneClick$.next(1)\">\n              unpatched update\n            </button>\n            <button mat-raised-button [unpatch] (click)=\"changeAllClick$.next(10)\">\n              unpatched Change all\n            </button>\n            <button mat-raised-button [unpatch] (click)=\"toggleIntervalClick$.next(10)\">\n              unpatched toggel interval\n            </button>\n          </p>\n          <rxa-visualizer viewType=\"embedded-view\" *rxFor=\"array$; let i; let r$ = record$; let select = select\">\n            <ng-container *rxFor=\"select(['arr']); trackBy: tK; distinctBy:dK; let v$ = record$;\">\n              <rxa-rx-for-value [value]=\"v$\"></rxa-rx-for-value>\n            </ng-container>\n          </rxa-visualizer>\n        </div>\n      </div>\n    </rxa-visualizer>\n  `,\n  changeDetection: environment.changeDetection,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n\n  `]\n})\nexport class RxForContainerComponent {\n  tK = 'id';\n\n  displayStates = {\n    native: 0,\n    nativeReactive: 1,\n    rxAngularReactive: 2,\n    all: 3\n  };\n\n  changeOneClick$ = new Subject<number>();\n  changeAllClick$ = new Subject<number>();\n  toggleIntervalClick$ = new Subject<number>();\n\n  array$ = merge(\n    this.changeOneClick$.pipe(immutableIncArr()),\n    merge(\n      this.toggleIntervalClick$.pipe(\n        scan(a => !a, false),\n        switchMap(b => b ? interval(100) : EMPTY)\n      ),\n      this.changeAllClick$\n    ).pipe(\n      immutableArr()\n    )\n  ).pipe(\n    share()\n  );\n\n  load$ = new BehaviorSubject<number>(0);\n  trackById = (i) => i.id;\n\n  dK = (a, b) => a.value === b.value;\n\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Observable, ObservableInput, ReplaySubject, Subscription, Unsubscribable } from 'rxjs';\nimport { distinctUntilChanged, groupBy, map, mergeAll, mergeMap, pluck, switchAll } from 'rxjs/operators';\n\nexport class Poc6Locv2ViewContext<T extends object, K = keyof T> {\n  // to enable `as` syntax we have to assign the directives selector (var as v)\n  poc6LocV2?: T;\n  $prop_arr$: any;\n  $implicit?: T;\n\n  constructor(private $value$: Observable<T>) {\n    this.$prop_arr$ = $value$.pipe(pluck('arr'), distinctUntilChanged());\n  }\n\n  $select = (props: K[]): Observable<any> => {\n    return this.$value$.pipe(\n     pluck(...props as any)\n  );\n  }\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[poc6LocV2]'\n})\nexport class Poc6Locv2Directive<U> implements OnInit, OnDestroy {\n  private subscription: Unsubscribable = new Subscription();\n\n  observables$ = new ReplaySubject(1);\n  embeddedViews: Map<U, { view: EmbeddedViewRef<any>, item: any }> = new Map();\n\n  values$: Observable<U[]> = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  @Input()\n  set poc6LocV2(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  @Input()\n  poc6LocV2TrackBy = 'id';\n\n  @Input()\n  poc6LocV2DistinctBy = (a, b) => a.value === b.value;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private readonly templateRef: TemplateRef<Poc6Locv2ViewContext<any>>,\n    private readonly viewContainerRef: ViewContainerRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.values$\n      .pipe(\n        mergeMap(arr => arr),\n        groupBy(i => i[this.poc6LocV2TrackBy]),\n        map(o$ => {\n          const distincted$ = o$.pipe(\n            distinctUntilChanged(this.poc6LocV2DistinctBy)\n          );\n          this.updateItem(o$.key, distincted$)\n          return distincted$;\n          }\n        ),\n        mergeAll()\n      )\n      .subscribe();\n  }\n\n  updateItem = (key, $value$): void => {\n    let existingItem = this.embeddedViews.has(key) ? this.embeddedViews.get(key) : undefined;\n    if (!existingItem) {\n      const view = this.viewContainerRef\n    .createEmbeddedView(this.templateRef, new Poc6Locv2ViewContext<any>($value$));\n      existingItem = { view, item: $value$ };\n      this.embeddedViews.set(key, existingItem);\n      existingItem.view.detectChanges();\n    }\n  };\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n    this.subscription.unsubscribe();\n  }\n\n}\n","// tslint:disable:no-unused-expression\n\nimport { Component, Input } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { RxState } from '@rx-angular/state';\nimport { toBoolean } from '../utils';\nimport { TestItem } from '../model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rxa-value',\n  template: `\n    <mat-icon class=\"item\" [ngClass]=\"{red:!v, green:v}\" *rxLet=\"value$; let v\">{{v ? 'check' : 'highlight_off'}}</mat-icon>`,\n  styles: [`\n    .item.red {\n      color: red;\n    }\n    .item.green {\n      color: green;\n    }\n    .value.number {\n    }\n    .value.string {\n    }\n    .value.object {\n    }\n    .value.array {\n    }\n  `],\n  providers: [RxState]\n})\nexport class ValueComponent {\n  value$ = this.state.select(map(s => toBoolean(s.item.value, 0.5)));\n\n  @Input()\n  set value(o: Observable<TestItem> | TestItem) {\n    this.state.connect('item', isObservable(o) ? o : of(o));\n  }\n\n\n  constructor(public state: RxState<{ item: TestItem }>) {\n\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { defer, ObservableInput, ReplaySubject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  groupBy,\n  map, mergeAll,\n  mergeMap,\n  scan,\n  shareReplay,\n  startWith,\n  switchAll,\n  take,\n  tap\n} from 'rxjs/operators';\nimport { RxForViewContext } from './model';\nimport { RxEffects } from '../../../../shared/rx-effects.service';\n\ntype RxForTemplateNames = 'rxSuspense' | 'rxNext' | 'rxError' | 'rxComplete';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rxFor]',\n  providers: [RxEffects]\n})\nexport class RxForDirective<T extends object, U extends NgIterable<T> = NgIterable<T>> implements OnInit, OnDestroy {\n  private evMap: Map<string, EmbeddedViewRef<RxForViewContext<T, U>>> = new Map();\n  private differ: IterableDiffer<T> | null = null;\n  private observables$ = new ReplaySubject<ObservableInput<U>>(1);\n\n  values$ = this.observables$\n    .pipe(\n      distinctUntilChanged(),\n      switchAll()\n    );\n\n  private readonly records$ = defer(() => this.values$.pipe(\n    mergeMap(arr => arr),\n    groupBy(r => r[this._rxTrackBy]),\n    scan((records, o$) => ({\n      ...records,\n      [o$.key]: o$.pipe(distinctUntilChanged(this.rxForDistinctBy))\n    }), {}),\n    mergeAll(),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  ));\n\n  @Input()\n  set rxFor(potentialObservable: ObservableInput<U> | null | undefined) {\n    this.observables$.next(potentialObservable);\n  }\n\n  _rxTrackBy = 'id';\n  @Input()\n  rxForDistinctBy = (a, b) => a.value === b.value;\n\n  @Input()\n  set rxForTrackBy(key: string) {\n    if (key) {\n      this._rxTrackBy = key;\n    } else {\n      this._rxTrackBy = 'id';\n    }\n  }\n\n\n  constructor(\n    private rxEffects: RxEffects,\n    private cdRef: ChangeDetectorRef,\n    private readonly templateRef: TemplateRef<RxForViewContext<T, U>>,\n    private readonly viewContainerRef: ViewContainerRef,\n    private iterableDiffers: IterableDiffers\n  ) {\n\n  }\n\n  initDiffer(iterable: U = [] as U) {\n    console.log('initDiffer');\n    this.differ = this.iterableDiffers.find(iterable).create((index: number, item: T) => item[this._rxTrackBy]);\n    this.rxEffects.hold(this.values$.pipe(\n      startWith(iterable),\n      map(i => ({ diff: this.differ.diff(i), iterable: i })),\n      filter(r => r.diff != null),\n      shareReplay(1)\n    ), (r) => this.applyChanges(r.diff, r.iterable));\n  }\n\n  ngOnInit() {\n    this.rxEffects.hold(this.values$.pipe(take(1)), (value) => this.initDiffer(value));\n  }\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n  }\n\n  private applyChanges(changes: IterableChanges<T>, iterable: U) {\n    console.log('changes', changes);\n    changes.forEachOperation((\n      r: IterableChangeRecord<T>,\n      previousIndex: number | null,\n      currentIndex: number | null\n    ) => {\n      const idx = currentIndex == null ? undefined : currentIndex;\n      const recordId = r.item[this._rxTrackBy];\n      const name = 'rxNext';\n      const evName = name + recordId;\n\n      // enter\n      if (r.previousIndex == null) {\n\n        const evc = new RxForViewContext(r.item, iterable, this.rxForDistinctBy);\n        const view = this.viewContainerRef\n          .createEmbeddedView(this.templateRef, evc, idx);\n        this.evMap.set(evName, view);\n        view.detectChanges();\n\n      } else if (currentIndex == null) {\n\n        this.viewContainerRef.remove(\n          previousIndex === null ? undefined : previousIndex);\n\n      } else if (previousIndex !== null) {\n\n        const view = <EmbeddedViewRef<RxForViewContext<T, U>>>this.viewContainerRef.get(previousIndex);\n        this.viewContainerRef.move(view, idx);\n        view.context.$implicit = r.item;\n\n      }\n    });\n\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const viewRef =\n        <EmbeddedViewRef<RxForViewContext<T, U>>>this.viewContainerRef.get(record.currentIndex);\n      viewRef.context.$implicit = record.item;\n    });\n    /*\n    // behavior like *ngFor\n    const tuplesToDetectChanges: RecordViewTuple<T, U>[] = [];\n    // TODO: dig into `IterableDiffer`\n    changes.forEachOperation(\n      (\n        changeRecord: IterableChangeRecord<T>,\n        previousIndex: number | null,\n        currentIndex: number | null\n      ) => {\n        const id = changeRecord.item[this._rxTrackBy];\n        // Insert\n        if (changeRecord.previousIndex == null) {\n          const evName = 'rxNext' + id;\n          // this is basically the first run\n          // create the embedded view for each value with default values\n          this.templateManager.displayView('rxNext', id);\n          tuplesToDetectChanges.push({\n            view: this.templateManager.getEmbeddedView(evName),\n            record: changeRecord\n          });\n\n        } else if (currentIndex == null) {\n\n          this.viewContainerRef.remove(\n            previousIndex === null ? undefined : previousIndex);\n\n        } else if (previousIndex !== null) {\n\n          const view = <EmbeddedViewRef<RxForViewContext<T, U>>>this.viewContainerRef.get(previousIndex);\n          this.viewContainerRef.move(view, currentIndex);\n          tuplesToDetectChanges.push({\n            view,\n            record: changeRecord\n          });\n        }\n      });\n\n    for (let i = 0; i < tuplesToDetectChanges.length; i++) {\n      this._perViewChange(tuplesToDetectChanges[i].view, tuplesToDetectChanges[i].record);\n    }\n\n    for (let index = 0, count = this.viewContainerRef.length; index < count; index++) {\n      this.templateManager.updateViewContext({\n        index, count,\n        rxFor: iterable,\n        record$: this.records$.pipe(map(records => records[this._rxTrackBy]))\n      });\n\n    }\n\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const viewRef =\n        <EmbeddedViewRef<RxForViewContext<T, U>>>this.viewContainerRef.get(record.currentIndex);\n      viewRef.context.$implicit = record.item;\n      viewRef.detectChanges();\n    });\n\n    */\n  }\n\n  private _perViewChange(\n    view: EmbeddedViewRef<RxForViewContext<T, U>>, record: IterableChangeRecord<T>) {\n    view.context.$implicit = record.item;\n    view.detectChanges();\n  }\n\n\n}\n","export {ValueModule} from '../value-provider/value/value.module';\nexport {ValueComponent} from '../value-provider/value/value.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisualizerModule } from '../../../../shared/debug-helper/visualizer';\nimport { TemplateModule, UnpatchEventsModule } from '@rx-angular/template';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DirtyChecksModule } from '../../../../shared/debug-helper/dirty-checks';\nimport { ValueModule } from '../../../../shared/debug-helper/work';\nimport { RxForContainerComponent } from './parent.component';\nimport { RxForValueComponent } from './rx-for-value.component';\nimport { RxForDirective } from './rx-for.directive';\nimport { Poc6Locv2Directive } from './poc6-locv2.directive';\nimport { Poc6Locv6Directive } from './poc6-locv.directive';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Poc1ForDirective } from './poc1-for.directive';\nimport { Poc2ForDirective } from './poc2-for.directive';\nimport { Poc5Locv5 } from './poc5-locv.directive';\nimport { ViewVsEmbeddedViewModule } from '../view-vs-embedded-view/view-vs-embedded-view.module';\n\nconst DECLARATIONS = [\n  RxForContainerComponent,\n  Poc1ForDirective,\n  Poc2ForDirective,\n  Poc5Locv5,\n  Poc6Locv2Directive,\n  Poc6Locv6Directive,\n  RxForDirective,\n  RxForValueComponent\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    CommonModule,\n    VisualizerModule,\n    UnpatchEventsModule,\n    MatButtonModule,\n    DirtyChecksModule,\n    ValueModule,\n    MatButtonToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    TemplateModule,\n    ViewVsEmbeddedViewModule,\n  ],\n  exports: DECLARATIONS\n})\nexport class RxForPocModule {\n}\n"],"sourceRoot":"webpack:///"}