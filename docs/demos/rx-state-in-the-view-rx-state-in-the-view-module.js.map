{"version":3,"sources":["./src/app/shared/utils/to-array.pipe.ts","./src/app/features/integrations/dynamic-counter/rx-state-in-the-view/rx-state-in-the-view.module.ts","./src/app/shared/utils/utils.module.ts","./src/app/features/integrations/dynamic-counter/rx-state-in-the-view/rx-state-in-the-view.component.ts","./src/app/features/integrations/dynamic-counter/rx-state-in-the-view/rx-state-in-the-view.routes.ts"],"names":[],"mappings":"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","file":"rx-state-in-the-view-rx-state-in-the-view-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toArray'\n})\nexport class ToArrayPipe implements PipeTransform {\n  transform(value: number | string): any[] {\n    if (typeof value === 'number') {\n      return new Array(value).fill(0).map((_, idx) => idx);\n    }\n    return value != null ? value.toString().split('') : [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './rx-state-in-the-view.routes';\nimport { RxStateInTheViewComponent } from './rx-state-in-the-view.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\nconst DECLARATIONS = [RxStateInTheViewComponent];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ROUTES),\n    CommonModule\n  ]\n})\nexport class RxStateInTheViewModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\n\n@NgModule({\n  declarations: [ToArrayPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [ToArrayPipe]\n})\nexport class UtilsModule { }\n","import { Component } from '@angular/core';\nimport { CounterState, INITIAL_STATE } from '../shared/model';\nimport { RxState, selectSlice } from '@rx-angular/state';\nimport { EMPTY, Subject, timer } from 'rxjs';\nimport { toLatestFrom } from '../../../../shared/utils/to-latest-from';\nimport { toInt } from '../../../../shared/utils/to-int';\nimport { map, switchMap } from 'rxjs/operators';\nimport { updateCount } from '../shared/utils';\n\n\n@Component({\n  selector: 'rxa-counter-rx-state-in-the-view',\n  template: `\n    <h1>RxState in the view</h1>\n    <div class=\"counter\">\n\n      <rxa-counter-display [count$]=\"count$\"></rxa-counter-display>\n\n      <button (click)=\"set({isTicking: true})\" mat-raised-button>\n        Start\n      </button>\n\n      <button (click)=\"set({isTicking: false})\" mat-raised-button>\n        Pause\n      </button>\n\n      <button (click)=\"set(initialCounterState)\" mat-raised-button>\n        Reset\n      </button>\n\n      <br/>\n\n      <button (click)=\"setToClick.next()\" mat-raised-button>\n        Set To\n      </button>\n\n      <mat-form-field>\n        <label>Count</label>\n        <input #count type=\"number\" min=\"0\" matInput [value]=\"initialCounterState.count\" (input)=\"countChange.next(count.value)\"/>\n      </mat-form-field>\n      <br/>\n\n      <button (click)=\"set({countUp: true})\" mat-raised-button>\n        Count Up\n      </button>\n\n      <button (click)=\"set({countUp: false})\" mat-raised-button>\n        Count Down\n      </button>\n\n      <br/>\n\n      <mat-form-field>\n        <label>Tick Speed</label>\n        <input #tickSpeed type=\"number\" min=\"0\" matInput [value]=\"tickSpeed$ | push\" (input)=\"set({tickSpeed: tickSpeed.value})\"/>\n      </mat-form-field>\n\n      <mat-form-field>\n        <label>CountDiff</label>\n        <input #countDiff type=\"number\" min=\"0\" matInput [value]=\"countDiff$ | push\" (input)=\"set({countUp: countDiff.value})\"/>\n      </mat-form-field>\n\n    </div>\n  `\n})\nexport class RxStateInTheViewComponent extends RxState<CounterState> {\n  initialCounterState = INITIAL_STATE;\n  readonly setToClick = new Subject<Event>();\n  readonly countChange = new Subject<string>();\n\n  readonly count$ = this.select(map(s => s.count+''));\n  readonly tickSpeed$ = this.select(map(s => s.tickSpeed+''));\n  readonly countDiff$ = this.select(map(s => s.countDiff+''));\n\n  private readonly updateCountTrigger$ = this.select(\n    selectSlice(['isTicking', 'tickSpeed']),\n    switchMap(s => (s.isTicking ? timer(0, s.tickSpeed) : EMPTY))\n  );\n\n  constructor() {\n    super();\n    this.set(this.initialCounterState);\n    this.connect('count', this.setToClick.pipe(toLatestFrom(this.countChange, this.initialCounterState.count+''), toInt()));\n    this.connect('count', this.updateCountTrigger$, updateCount);\n  }\n\n}\n\n\n","import { Routes } from '@angular/router';\nimport { RxStateInTheViewComponent } from './rx-state-in-the-view.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: RxStateInTheViewComponent\n  }\n];\n"],"sourceRoot":"webpack:///"}